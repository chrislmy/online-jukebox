{"version":3,"sources":["logo.svg","components/Header/header.js","reducers/initialState.js","reducers/actionTypes.js","reducers/rootReducer.js","store/index.js","actions/socketActions/socket-messages.js","config.js","actions/actionCreators/user-actions.js","actions/actionCreators/lobby-actions.js","actions/socketActions/socket-actions.js","actions/actionCreators/video-queue-actions.js","components/VideoSuggestions/videoSuggestions.js","actions/youtubeApiActions/video-search-actions.js","components/SearchBar/searchBar.js","components/YoutubePlayer/subComponents/videoBanner.js","components/YoutubePlayer/youtubePlayer.js","components/Playlist/playlist.js","components/Navbar/navbar.js","components/LoadingSpinner/loadingSpinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NothingPlayingHeader","react_default","a","createElement","Header","connect","state","nowPlayingTitle","video","nowPlaying","username","user","_ref","className","src","logo","alt","header_NothingPlayingHeader","initialState","initialVideo","suggestedUser","videoId","initialPlaylist","currentPlaylist","initialUser","initialLobby","users","volume","loadingData","type","isLoading","actionTypes","rootReducer","combineReducers","arguments","length","undefined","action","types","Object","objectSpread","data","playlist","lobby","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","socketMessages","NEW_USER","USER_JOINED","FETCH_PLAYLIST","UPDATE_PLAYLIST","FETCH_LOBBY_USERS","UPDATE_LOBBY_USERS","PLAY_NEXT_VIDEO","ADD_TO_PLAYLIST","config","keys","API_KEY","API_BASE_URL","SERVER_BASE_ENDPOINT","environment","debug","user_actions","dataLoading","payload","dataLoadingComplete","lobby_actions","dispatch","updateVolumeAction","status","socket","socketIOClient","socket_actions","sessionUsername","localStorage","getItem","userForServer","emit","lobbyActions","on","userActions","setItem","setupUserConnection","videos","_videoQueueActions$ge","videoQueueActions","getHeadVideoPlaylist","videoTitle","updatePlaylist","updateCurrentVideoTitle","updateCurrentVideoId","updateSuggestedUser","defaultSkip","video_queue_actions","addVideoToQueue","getState","socketActions","updateQueue","VideoPanel","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","_this2","key","thumbnail","title","channelTitle","duration","lib","bsStyle","onClick","React","Component","VideoSuggestions","rows","map","videoSuggestions_VideoPanel","video_search_actions","getVideos","query","Promise","resolve","reject","axios","get","then","response","catch","error","HeadPhoneIcon","VideoSearchPrompt","searchBar_HeadPhoneIcon","SearchBar","videoSearchActions","setState","results","console","log","handleInputChange","event","target","value","submitForm","preventDefault","onSubmit","controlId","Addon","placeholder","onChange","VideoSuggestions_videoSuggestions","searchBar_VideoSearchPrompt","volumes","volumeControl","player","setVolume","unMute","mute","VolumeButton","bsSize","VideoBanner","_ref2","volumeButtons","index","videoBanner_VolumeButton","YoutubePlayerView","_onReady","_onChangeVideo","_onStateChange","playVideo","_this$props","currentVideoId","playerClassName","opts","height","width","playerVars","autoplay","controls","showinfo","YouTube","onReady","onStateChange","subComponents_videoBanner","YoutubePlayer","EmptyPlaylistView","Playlist","listItems","playlist_EmptyPlaylistView","NoUsersItem","UserIcon","NavigationBar","NavBarDropdownItems","navbar_UserIcon","inverse","collapseOnSelect","Brand","Toggle","Collapse","pullRight","id","navbar_NoUsersItem","labelMap","CONNECTING_TO_LOBBY","SEARCHING_YOUTUBE_VIDEO","LoadingSpinner","_state$lobby$loadingD","spinnerClassName","App","LoadingSpinner_loadingSpinner","Navbar_navbar","Header_header","components_Playlist_playlist","YoutubePlayer_youtubePlayer","SearchBar_searchBar","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3be4fb9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6e0933ab.svg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport logo from '../../logo.svg';\r\nimport './header.css';\r\n\r\nconst NothingPlayingHeader = () => (\r\n    <span>\r\n        Nothing Playing, Party's Dead\r\n    </span>\r\n);\r\n\r\nconst HeaderView = ({ nowPlayingTitle, username }) => (\r\n    <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1 className=\"song-heading\">\r\n            { (nowPlayingTitle !== '') \r\n                ? (nowPlayingTitle)\r\n                : <NothingPlayingHeader />\r\n            }\r\n        </h1>\r\n        <h3 className=\"welcome-heading\">\r\n            Welcome, <span className=\"username-field\"> {username} </span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        nowPlayingTitle: state.video.nowPlaying,\r\n        username: state.user.username\r\n    }\r\n}\r\n\r\nconst Header = connect(mapStateToProps)(HeaderView);\r\n\r\nexport default Header","const initialVideo = {\r\n    suggestedUser: '',\r\n    nowPlaying: '',\r\n    videoId: ''\r\n}\r\n\r\nconst initialPlaylist = {\r\n    currentPlaylist: []\r\n}\r\n\r\nconst initialUser = {\r\n    username: ''\r\n}\r\n\r\nconst initialLobby = {\r\n    users: [],\r\n    volume: 0,\r\n    loadingData: {\r\n        type: '',\r\n        isLoading: false\r\n    }\r\n}\r\n\r\nexport default {\r\n    initialVideo,\r\n    initialPlaylist,\r\n    initialUser,\r\n    initialLobby\r\n}","const UPDATE_CURRENT_VIDEO_TITLE = 'UPDATE_CURRENT_VIDEO_TITLE';\r\nconst UPDATE_CURRENT_VIDEO_ID = 'UPDATE_CURRENT_VIDEO_ID';\r\nconst UPDATE_PLAYLIST = 'UPDATE_PLAYLIST';\r\nconst UPDATE_USERNAME = 'UPDATE_USERNAME';\r\nconst UPDATE_USERS = 'UPDATE_USERS';\r\nconst UPDATE_SUGGESTED_USER = 'UPDATE_SUGGESTED_USER';\r\nconst UPDATE_VOLUME = 'UPDATE_VOLUME';\r\nconst LOADING_DATA = 'LOADING_DATA';\r\nconst DATA_LOADED_COMPLETE = 'DATA_LOADED_COMPLETE';\r\n\r\nexport default {\r\n    UPDATE_CURRENT_VIDEO_TITLE,\r\n    UPDATE_CURRENT_VIDEO_ID,\r\n    UPDATE_SUGGESTED_USER,\r\n    UPDATE_PLAYLIST,\r\n    UPDATE_USERNAME,\r\n    UPDATE_USERS,\r\n    UPDATE_VOLUME,\r\n    LOADING_DATA,\r\n    DATA_LOADED_COMPLETE\r\n}\r\n","import initialState from './initialState';\r\nimport { combineReducers } from 'redux';\r\nimport types from './actionTypes';\r\n\r\nconst video = (state = initialState.initialVideo, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_CURRENT_VIDEO_TITLE:\r\n            return { ...state, nowPlaying: action.data };\r\n        case types.UPDATE_CURRENT_VIDEO_ID:\r\n            return { ...state, videoId: action.data };\r\n        case types.UPDATE_SUGGESTED_USER:\r\n            return { ...state, suggestedUser: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst playlist = (state = initialState.initialPlaylist, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_PLAYLIST:\r\n            return { ...state, currentPlaylist: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst user = (state = initialState.initialUser, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_USERNAME:\r\n            return { ...state, username: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst lobby = (state = initialState.initialLobby, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_USERS:\r\n            return { ...state, users: action.data };\r\n        case types.UPDATE_VOLUME:\r\n            return { ...state, volume: action.data };\r\n        case types.LOADING_DATA:\r\n            return { ...state, loadingData: action.data };\r\n        case types.DATA_LOADED_COMPLETE:\r\n            return { ...state, loadingData: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({video, playlist, user, lobby});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","const socketMessages = {\r\n    NEW_USER: 'NEW_USER',\r\n    USER_JOINED: 'USER_JOINED',\r\n    FETCH_PLAYLIST: 'FETCH_PLAYLIST',\r\n    UPDATE_PLAYLIST: 'UPDATE_PLAYLIST',\r\n    FETCH_LOBBY_USERS: 'FETCH_LOBBY_USERS',\r\n    UPDATE_LOBBY_USERS: 'UPDATE_LOBBY_USERS',\r\n    PLAY_NEXT_VIDEO: 'PLAY_NEXT_VIDEO',\r\n    ADD_TO_PLAYLIST: 'ADD_TO_PLAYLIST'\r\n }\r\n\r\n export default socketMessages;","// Config used throughout the application\r\nconst config = {\r\n    keys: {\r\n        API_KEY: 'AIzaSyDXQUtd40PzAqYAuet9-Ol0LzKrI6ZTDDM',\r\n        API_BASE_URL: 'https://www.googleapis.com/youtube/v3/',\r\n        SERVER_BASE_ENDPOINT: 'https://tranquil-thicket-13222.herokuapp.com'\r\n        // SERVER_BASE_ENDPOINT: 'http://localhost:5000',\r\n    },\r\n    environment: {\r\n        debug: false\r\n    }\r\n}\r\n\r\nexport default config;","import types from '../../reducers/actionTypes';\r\n\r\nconst updateUsername = (username) => ({\r\n    type: types.UPDATE_USERNAME,\r\n    data: username\r\n});\r\n\r\nconst updateLobbyUsers = (users) => ({\r\n    type: types.UPDATE_USERS,\r\n    data: users\r\n});\r\n\r\nexport default {\r\n    updateUsername,\r\n    updateLobbyUsers\r\n}","import types from '../../reducers/actionTypes';\r\nimport store from '../../store/index';\r\n\r\nconst updateVolumeAction = (volume) => ({\r\n    type: types.UPDATE_VOLUME,\r\n    data: volume\r\n});\r\n\r\nconst dataLoading = (payload) => ({\r\n    type: types.LOADING_DATA,\r\n    data: payload\r\n});\r\n\r\nconst dataLoadingComplete = (payload) => ({\r\n    type: types.DATA_LOADED_COMPLETE,\r\n    data: payload\r\n});\r\n\r\nconst updateLoadingStatus = (status, payload) => {\r\n    if(status = 'calling') {\r\n        store.dispatch(dataLoading(payload));\r\n    }else if (status = 'complete') {\r\n        store.dispatch(dataLoadingComplete(payload));\r\n    }\r\n}\r\n\r\nconst updateVolume = (volume) => {\r\n    store.dispatch(updateVolumeAction(volume));\r\n}\r\n\r\nexport default {\r\n    updateVolume,\r\n    updateLoadingStatus,\r\n    dataLoading,\r\n    dataLoadingComplete\r\n};","import store from '../../store/index';\r\nimport socketIOClient from 'socket.io-client';\r\nimport socketMessages from './socket-messages';\r\nimport config from '../../config';\r\nimport videoQueueActions from '../actionCreators/video-queue-actions';\r\nimport userActions from '../actionCreators/user-actions';\r\nimport lobbyActions from '../actionCreators/lobby-actions';\r\n\r\nconst socket = socketIOClient(config.keys.SERVER_BASE_ENDPOINT);\r\n\r\n// Initialises socket user connection with server\r\nconst setupUserConnection = () => {\r\n    // Username is stored per cookie\r\n    const sessionUsername = localStorage.getItem(\"username\");\r\n    const userForServer = sessionUsername ? {username: sessionUsername} : {username: ''}\r\n    socket.emit(socketMessages.NEW_USER, userForServer);\r\n    lobbyActions.updateLoadingStatus('calling', {type: 'CONNECTING_TO_LOBBY', isLoading: true});\r\n    socket.on(socketMessages.USER_JOINED, (user) => {\r\n        if(!sessionUsername) {\r\n            store.dispatch(userActions.updateUsername(user.username));\r\n            localStorage.setItem('username', user.username);\r\n        } else {\r\n            store.dispatch(userActions.updateUsername(sessionUsername));\r\n        }\r\n    })\r\n}\r\n\r\n// Initialises socket lobby connection with server\r\nconst setupLobbyConnection = () => {\r\n    socket.emit(socketMessages.FETCH_LOBBY_USERS);\r\n    socket.on(socketMessages.UPDATE_LOBBY_USERS, (users) => {\r\n        store.dispatch(userActions.updateLobbyUsers(users));\r\n    })\r\n}\r\n\r\n// Initialises socket playlist connection with server\r\nconst setupPlaylistConnection = () => {\r\n    socket.emit(socketMessages.FETCH_PLAYLIST);\r\n    socket.on(socketMessages.UPDATE_PLAYLIST, (data) => {\r\n        const playlist = data.videos;\r\n        const { videoId, videoTitle, suggestedUser } = videoQueueActions.getHeadVideoPlaylist(playlist);\r\n        store.dispatch(videoQueueActions.updatePlaylist(playlist));\r\n        store.dispatch(videoQueueActions.updateCurrentVideoTitle(videoTitle));\r\n        store.dispatch(videoQueueActions.updateCurrentVideoId(videoId));\r\n        store.dispatch(videoQueueActions.updateSuggestedUser(suggestedUser));\r\n        lobbyActions.updateLoadingStatus('complete', {type: 'CONNECTING_TO_LOBBY', isLoading: false});\r\n    });\r\n}\r\n\r\nconst playNextVideo = (videoId, defaultSkip) => {\r\n    socket.emit(socketMessages.PLAY_NEXT_VIDEO, { videoId, defaultSkip });\r\n}\r\n\r\nconst addToPlaylist = (video) => {\r\n    socket.emit(socketMessages.ADD_TO_PLAYLIST, video);\r\n}\r\n\r\n// Initial setup of socket connections when jukebox is launched\r\nconst initialSetup = () => {\r\n    setupUserConnection();\r\n    setupPlaylistConnection();\r\n    setupLobbyConnection();\r\n}\r\n\r\nexport default {\r\n    initialSetup,\r\n    addToPlaylist,\r\n    playNextVideo\r\n}","import socketActions from '../socketActions/socket-actions';\r\nimport types from '../../reducers/actionTypes';\r\nimport store from '../../store/index';\r\n\r\nconst addVideoToQueue = (videoId, videoTitle) => {\r\n    const state = store.getState();\r\n    const suggestedUser = state.user.username;\r\n    const video = {\r\n        suggestedUser,\r\n        videoId,\r\n        videoTitle\r\n    }\r\n    socketActions.addToPlaylist(video);\r\n}\r\n\r\nconst getHeadVideoPlaylist = (playlist) => {\r\n    // Catches case when playlist array is empty\r\n    const nullVideo = {\r\n        videoTitle: '',\r\n        videoId: '',\r\n        suggestedUser: ''\r\n    };\r\n    const head = playlist && playlist[0] || nullVideo;\r\n    return head;\r\n};\r\n\r\n// If defaultSkip is set to false then only the host will play the next video\r\nconst updateQueue = (defaultSkip = true) => {\r\n    const state = store.getState();\r\n    const videoId = state.video.videoId;\r\n    socketActions.playNextVideo(videoId, defaultSkip);\r\n}\r\n\r\n// Redux store actions\r\nconst updateCurrentVideoTitle = (videoTitle) => ({\r\n    type: types.UPDATE_CURRENT_VIDEO_TITLE,\r\n    data: videoTitle\r\n})\r\n\r\nconst updateCurrentVideoId = (videoId) => ({\r\n    type: types.UPDATE_CURRENT_VIDEO_ID,\r\n    data: videoId\r\n})\r\n\r\nconst updateSuggestedUser = (suggestedUser) => ({\r\n    type: types.UPDATE_SUGGESTED_USER,\r\n    data: suggestedUser\r\n})\r\n\r\nconst updatePlaylist = (playlist) => ({\r\n    type: types.UPDATE_PLAYLIST,\r\n    data: playlist\r\n});\r\n\r\nexport default {\r\n    addVideoToQueue,\r\n    updateCurrentVideoTitle,\r\n    updateCurrentVideoId,\r\n    updateSuggestedUser,\r\n    updatePlaylist,\r\n    getHeadVideoPlaylist,\r\n    updateQueue\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap/lib';\r\nimport videoQueueActions from '../../actions/actionCreators/video-queue-actions';\r\nimport './videoSuggestions.css';\r\n\r\nclass VideoPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(videoId, videoTitle) {\r\n        videoQueueActions.addVideoToQueue(videoId, videoTitle);\r\n    }\r\n\r\n    render() {\r\n        const video = this.props.video;\r\n\r\n        return (\r\n            <div>\r\n                <li className=\"suggestion-list-item\" key={video.videoId}>\r\n                    <div><img alt=\"video-thumbnail\" className=\"suggestion-thumbnail\" src={video.thumbnail} /></div>\r\n                    <div className=\"suggestion-description\">\r\n                        <h3 className=\"suggestion-title\">\r\n                            <i className=\"fas fa-music music-icon\"></i>{video.title}\r\n                        </h3>\r\n                        <div className=\"video-channel\">\r\n                            <i className=\"fab fa-youtube-square youtube-icon\"></i> {video.channelTitle}\r\n                        </div>\r\n                        <div className=\"video-duration\">\r\n                            <i className=\"fas fa-stopwatch stopwatch-icon\"></i> {video.duration}\r\n                        </div>\r\n                    </div>\r\n                    <Button\r\n                        className=\"add-video-button\"\r\n                        bsStyle=\"primary\"\r\n                        onClick={ () => this.handleClick(video.videoId, video.title) }\r\n                        >\r\n                            <i className=\"fas fa-plus plus-icon\"></i>\r\n                    </Button>\r\n                </li>\r\n                <hr className=\"video-suggestion-seperator\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst VideoSuggestions = (props) => {\r\n    const rows = props.videos.map(video => (\r\n        <VideoPanel key={video.videoId} video={video} />\r\n    ))\r\n\r\n    return <ul className=\"video-suggestion-list\">{rows}</ul>\r\n}\r\n\r\nexport default VideoSuggestions","import axios from 'axios'\r\nimport config from '../../config'\r\nimport lobbyActions from '../actionCreators/lobby-actions';\r\nimport store from '../../store/index';\r\n\r\nconst getVideos = (query) => new Promise((resolve, reject) => {\r\n    let videos = [];\r\n    lobbyActions.updateLoadingStatus('calling', {type: 'SEARCHING_YOUTUBE_VIDEO', isLoading: true});\r\n    axios.get(config.keys.SERVER_BASE_ENDPOINT + '/videos?query=' + query)\r\n        .then((response) => {\r\n            lobbyActions.updateLoadingStatus('complete', {type: 'SEARCHING_YOUTUBE_VIDEO', isLoading: false});\r\n            resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n            lobbyActions.dataLoadingComplete('complete', {type: 'CALL_FAILED_VIDEO_SEARCH', isLoading: false});\r\n            reject(error.response);\r\n        });\r\n});\r\n\r\n\r\nexport default {\r\n    getVideos\r\n}","import React from 'react';\r\nimport { InputGroup, FormGroup, FormControl } from 'react-bootstrap/lib';\r\nimport VideoSuggestions from '../VideoSuggestions/videoSuggestions';\r\nimport videoSearchActions from '../../actions/youtubeApiActions/video-search-actions';\r\nimport './searchBar.css';\r\n\r\nconst HeadPhoneIcon = () => (\r\n    <i className=\"fas fa-headphones-alt head-phone-icon\"></i>\r\n);\r\n\r\nconst VideoSearchPrompt = () => (\r\n    <div className=\"search-video-prompt-container\">\r\n        <HeadPhoneIcon />\r\n        <h4 className=\"search-video-prompt-prefix\"> Search for your favorite songs </h4>\r\n        <h5 className=\"search-video-prompt-suffix\"> Let's get this party started! </h5>\r\n    </div>\r\n)\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: '',\r\n            results: []\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n    }\r\n\r\n    submitForm (event) {\r\n        // Prevent page from being reloaded\r\n        event.preventDefault();\r\n        this.getVideos();\r\n    }\r\n\r\n    getVideos = () => {\r\n        videoSearchActions.getVideos(this.state.query)\r\n            .then((videos) => {\r\n                this.setState({\r\n                    results: videos\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        \r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            query: event.target.value    \r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"video-search-section\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <FormGroup className=\"search-bar-wrapper\" controlId=\"formBasicText\">\r\n                        <InputGroup>\r\n                            <InputGroup.Addon>\r\n                                <i className=\"fab fa-youtube-square\"></i>\r\n                            </InputGroup.Addon>\r\n                            <FormControl\r\n                                className=\"search-bar\"\r\n                                type=\"text\"\r\n                                value={this.state.query}\r\n                                placeholder=\"Enter a song name from Youtube\"\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                    \r\n                </form>\r\n                <div className=\"video-suggestions\">\r\n                    { this.state.results.length > 0\r\n                        ? <VideoSuggestions videos={this.state.results} />\r\n                        : <VideoSearchPrompt />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport { Button } from 'react-bootstrap/lib';\r\nimport { connect } from 'react-redux';\r\nimport videoQueueActions from '../../../actions/actionCreators/video-queue-actions';\r\nimport lobbyActions from '../../../actions/actionCreators/lobby-actions';\r\nimport './videoBanner.css';\r\n\r\nconst volumes = [25, 50, 75, 100];\r\n\r\nconst volumeControl = (volume, player) => {\r\n    lobbyActions.updateVolume(volume);\r\n    if(volume === 0){\r\n        player.mute();\r\n        return\r\n    }\r\n    player.setVolume(volume)\r\n    player.unMute();\r\n}\r\n\r\nconst VolumeButton = ({volume, player}) => (\r\n    <Button \r\n        className=\"volume-buttons\"\r\n        bsStyle=\"primary\"\r\n        bsSize=\"small\"\r\n        onClick={ () => { volumeControl(volume, player) } }\r\n    >\r\n        {volume}\r\n    </Button>\r\n);\r\n\r\nconst VideoBannerView = ({suggestedUser, videoId, player, volume}) => {\r\n    const volumeButtons = volumes.map((volume,index) => (\r\n        <VolumeButton player={player} volume={volume} key={index} />\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <h4 className=\"Video-Banner-Title\">\r\n                Added by : <span className=\"suggested-user\" >{suggestedUser}</span>\r\n            </h4>\r\n            <div className=\"control-buttons\">\r\n                <Button \r\n                    className=\"skip-video-button\"\r\n                    bsStyle=\"primary\"\r\n                    bsSize=\"small\"\r\n                    onClick={ () => videoQueueActions.updateQueue(true) }\r\n                >\r\n                    Skip <i className=\"skip-icon fas fa-forward\"></i>\r\n                </Button>\r\n\r\n                { volume === 0 ?\r\n                    <Button \r\n                        className=\"mute-button\"\r\n                        bsStyle=\"primary\"\r\n                        bsSize=\"small\"\r\n                        onClick={ () => { volumeControl(50, player) } }\r\n                    >\r\n                        <i className=\"fas fa-volume-mute\"></i>\r\n                    </Button> :\r\n                    <Button \r\n                        className=\"mute-button\"\r\n                        bsStyle=\"primary\"\r\n                        bsSize=\"small\"\r\n                        onClick={ () => { volumeControl(0, player) } }\r\n                    >\r\n                        <i className=\"fas fa-volume-up\"></i>\r\n                    </Button>\r\n                }\r\n\r\n                {volumeButtons}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    volume: state.lobby.volume\r\n});\r\n\r\nconst VideoBanner = connect(mapStateToProps)(VideoBannerView);\r\n\r\nexport default VideoBanner;","import React from 'react';\r\nimport Youtube from 'react-youtube';\r\nimport { Button } from 'react-bootstrap/lib';\r\nimport { connect } from 'react-redux';\r\nimport config from '../../config';\r\nimport VideoBanner from './subComponents/videoBanner';\r\nimport videoQueueActions from '../../actions/actionCreators/video-queue-actions';\r\nimport './youtubePlayer.css';\r\n\r\n// const VideoBanner = ({suggestedUser, videoId, player}) => (\r\n//     <div>\r\n//         <h4 className=\"Video-Banner-Title\">\r\n//             Added by : <span className=\"Suggested-User\" >{suggestedUser}</span>\r\n//         </h4>\r\n//         <div className=\"control-buttons\">\r\n//             <Button \r\n//                 className=\"Skip-Video-Button\"\r\n//                 bsStyle=\"primary\"\r\n//                 bsSize=\"small\"\r\n//                 onClick={ () => videoQueueActions.updateQueue(true) }\r\n//             >\r\n//                 Skip <i className=\"Skip-Icon fas fa-forward\"></i>\r\n//             </Button>\r\n\r\n//             <Button \r\n//                 className=\"Skip-Video-Button\"\r\n//                 bsStyle=\"primary\"\r\n//                 bsSize=\"small\"\r\n//                 onClick={ () => player.unMute() }\r\n//             >\r\n//             <i className=\"fas fa-volume-up\"></i>\r\n//             </Button>\r\n//         </div>\r\n//     </div>\r\n// );\r\n\r\nclass YoutubePlayerView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            player: null\r\n        };\r\n\r\n        this._onReady = this._onReady.bind(this);\r\n        this._onChangeVideo = this._onStateChange.bind(this);\r\n    }\r\n\r\n    _onReady(event) {\r\n        // Mount player to component\r\n        this.setState({\r\n            player: event.target\r\n        });\r\n\r\n        event.target.mute();\r\n        event.target.playVideo();\r\n    }\r\n\r\n    _onStateChange(event) {\r\n        // Mounted\r\n        if(event.data === -1) {\r\n            // event.target.seekTo(50,true);\r\n        }\r\n\r\n        // Finished playing\r\n        if(event.data === 0) {\r\n            videoQueueActions.updateQueue(false);\r\n        }\r\n        // event.target.playVideo();\r\n    }\r\n\r\n    render() {\r\n        const { currentVideoId, suggestedUser } = this.props\r\n\r\n        const playerClassName = config.environment.debug ? 'Youtube-Player-Debug' : 'Youtube-Player';\r\n        const debugPlayerVars = { autoplay: 1 };\r\n        const defaultPlayerVars = {\r\n            autoplay: 1,\r\n            controls: 0,\r\n            showinfo: 0\r\n        };\r\n\r\n        const playerVars = config.environment.debug ? debugPlayerVars : defaultPlayerVars;\r\n\r\n        const opts = {\r\n            height: '250',\r\n            width: '420',\r\n            playerVars\r\n        }\r\n\r\n        return (\r\n            <div className=\"Youtube-Player-Wrapper\">\r\n                <Youtube\r\n                    className= {playerClassName}\r\n                    videoId={currentVideoId}\r\n                    opts={opts}\r\n                    onReady={this._onReady}\r\n                    onStateChange={this._onStateChange}\r\n                />\r\n                { suggestedUser !== '' \r\n                    ? <VideoBanner suggestedUser={suggestedUser} videoId={currentVideoId} player={this.state.player}/>\r\n                    : <h4 className=\"Video-Banner-Title\">Jukebox Currently Paused</h4>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentVideoId: state.video.videoId,\r\n        suggestedUser: state.video.suggestedUser\r\n    }\r\n}\r\n\r\nconst YoutubePlayer = connect(mapStateToProps)(YoutubePlayerView);\r\n\r\nexport default YoutubePlayer","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './playlist.css';\r\n\r\nconst EmptyPlaylistView = () => (\r\n    <div className=\"Empty-Video-Background\">\r\n        <i className=\"Pause-Icon far fa-pause-circle\"></i>\r\n        <h4 className=\"No-Video-Text\">Currently no videos on the queue</h4>\r\n    </div>\r\n);\r\n\r\nconst PlaylistView = ({playlist}) => {\r\n    const listItems = playlist.map((video,index) => (\r\n        <div key={index} className=\"Playlist-Item-Wrapper\">\r\n            <li className=\"Playlist-Item\" key={index}>\r\n                <i className=\"Music-Icon fas fa-music\"></i>{video.videoTitle}\r\n            </li>\r\n            <hr className=\"seperator\"/>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <div className=\"Playlist-Section\">\r\n            <h4 className=\"Playlist-Header\"> Current Playlist</h4>\r\n            <hr className=\"seperator\"/>\r\n            <ul className=\"Video-Playlist\">\r\n                { playlist.length > 0 ? (listItems) : <EmptyPlaylistView/> }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        playlist: state.playlist.currentPlaylist\r\n    }\r\n};\r\n\r\nconst Playlist = connect(mapStateToProps)(PlaylistView);\r\n\r\nexport default Playlist;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navbar, Nav, NavDropdown, MenuItem } from 'react-bootstrap/lib';\r\nimport './navbar.css';\r\n\r\nconst NoUsersItem = () => (\r\n    <MenuItem>Currently No Users</MenuItem>\r\n);\r\n\r\nconst UserIcon = () => (\r\n    <i className=\"user-icon fas fa-user\"></i>\r\n);\r\n\r\nconst NavigationBarView = ({users, username}) => {\r\n    const NavBarDropdownItems = users.map((user,index) => (\r\n        <MenuItem key={index}>\r\n            <UserIcon/>\r\n            <span className=\"username-list-item\">\r\n                {user.username}\r\n                { username === user.username && (' (You)') }\r\n            </span>\r\n        </MenuItem>\r\n    ));\r\n    \r\n    return (\r\n        <Navbar inverse collapseOnSelect>\r\n            <Navbar.Header>\r\n                <Navbar.Brand>\r\n                    Online Jukebox\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n                <Nav pullRight>\r\n                    <NavDropdown title=\"Users\" id=\"Users-Nav-Dropdown\">\r\n                        { users.length > 0 ? (NavBarDropdownItems) : <NoUsersItem/> }\r\n                    </NavDropdown>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.user.username,\r\n        users: state.lobby.users\r\n    }\r\n};\r\n\r\nconst NavigationBar = connect(mapStateToProps)(NavigationBarView);\r\n\r\nexport default NavigationBar\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './loadingSpinner.css';\r\n\r\nconst labelMap =  {\r\n    CONNECTING_TO_LOBBY: 'Plugging you in ...',\r\n    SEARCHING_YOUTUBE_VIDEO: 'Searching ...'\r\n};\r\n\r\nconst LoadingSpinnerView = ({isLoading, type}) => {\r\n    const spinnerClassName = isLoading ? 'full-page-spinner-container' : 'full-page-spinner-inactive';\r\n\r\n    return (\r\n        <div className={spinnerClassName}>\r\n            <div className=\"full-page-spinner\"></div>\r\n            <div className=\"full-page-spinner-label\"> {labelMap[type]} </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { isLoading, type } = state.lobby.loadingData;\r\n    return {\r\n        isLoading,\r\n        type\r\n    }\r\n}\r\n\r\nconst LoadingSpinner = connect(mapStateToProps)(LoadingSpinnerView);\r\n\r\nexport default LoadingSpinner;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/header';\nimport SearchBar from './components/SearchBar/searchBar';\nimport YoutubePlayer from './components/YoutubePlayer/youtubePlayer';\nimport socketActions from './actions/socketActions/socket-actions';\nimport Playlist from './components/Playlist/playlist';\nimport NavigationBar from './components/Navbar/navbar';\nimport LoadingSpinner from './components/LoadingSpinner/loadingSpinner'\n\nclass App extends Component {\n    componentDidMount() {\n        socketActions.initialSetup();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <LoadingSpinner />\n                <NavigationBar />\n                <Header />\n                <div className=\"Main-Container\">\n                    <div className=\"Player-View-Container\">\n                        <span className=\"Current-Playlist\"><Playlist /></span>\n                        <span className=\"Youtube-Player-Container\"><YoutubePlayer /></span>\n                    </div>\n                </div>\n                <div className=\"Search-Bar-Wrapper\"><SearchBar /></div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}