{"version":3,"sources":["logo.svg","components/Header/header.js","reducers/initialState.js","reducers/actionTypes.js","reducers/rootReducer.js","store/index.js","actions/socketActions/socket-messages.js","config.js","actions/actionCreators/user-actions.js","actions/socketActions/socket-actions.js","actions/actionCreators/video-queue-actions.js","components/VideoSuggestions/videoSuggestions.js","actions/youtubeApiActions/video-search-actions.js","components/SearchBar/searchBar.js","components/YoutubePlayer/youtubePlayer.js","components/Playlist/playlist.js","components/Navbar/navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NothingPlayingHeader","react_default","a","createElement","DiscIcon","className","Header","connect","state","nowPlayingTitle","video","nowPlaying","username","user","_ref","src","logo","alt","header_DiscIcon","header_NothingPlayingHeader","initialState","initialVideo","suggestedUser","videoId","initialPlaylist","currentPlaylist","initialUser","initialLobby","users","actionTypes","rootReducer","combineReducers","arguments","length","undefined","action","type","types","Object","objectSpread","data","playlist","lobby","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","socketMessages","NEW_USER","USER_JOINED","FETCH_PLAYLIST","UPDATE_PLAYLIST","FETCH_LOBBY_USERS","UPDATE_LOBBY_USERS","PLAY_NEXT_VIDEO","ADD_TO_PLAYLIST","config","keys","API_KEY","API_BASE_URL","SERVER_BASE_ENDPOINT","environment","debug","user_actions","socket","socketIOClient","socket_actions","sessionUsername","localStorage","getItem","userForServer","emit","on","dispatch","userActions","setItem","setupUserConnection","videos","_videoQueueActions$ge","videoQueueActions","getHeadVideoPlaylist","videoTitle","updatePlaylist","updateCurrentVideoTitle","updateCurrentVideoId","updateSuggestedUser","defaultSkip","video_queue_actions","addVideoToQueue","getState","socketActions","updateQueue","VideoPanel","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","_this2","etag","title","snippet","thumbnailUrl","thumbnails","high","url","lib","key","sm","md","Heading","Body","bsStyle","onClick","id","_this3","map","renderCols","React","Component","VideoSuggestions","rows","videoSuggestions_VideoPanel","video_search_actions","getVideos","query","Promise","resolve","reject","axios","get","then","items","filter","kind","splice","catch","error","response","VIDEOS_PER_ROW","HeadPhoneIcon","VideoSearchPrompt","searchBar_HeadPhoneIcon","SearchBar","formatVideos","formattedVideos","i","row","push","videoSearchActions","setState","results","handleInputChange","event","target","value","submitForm","preventDefault","onSubmit","controlId","Addon","placeholder","onChange","VideoSuggestions_videoSuggestions","searchBar_VideoSearchPrompt","VideoBanner","player","bsSize","unMute","YoutubePlayerView","_onReady","_onChangeVideo","_onStateChange","mute","playVideo","_this$props","currentVideoId","playerClassName","opts","height","width","playerVars","autoplay","controls","showinfo","YouTube","onReady","onStateChange","youtubePlayer_VideoBanner","YoutubePlayer","EmptyPlaylistView","Playlist","listItems","index","playlist_EmptyPlaylistView","NoUsersItem","UserIcon","NavigationBar","NavBarDropdownItems","navbar_UserIcon","inverse","collapseOnSelect","Brand","Toggle","Collapse","pullRight","navbar_NoUsersItem","App","Navbar_navbar","Header_header","components_Playlist_playlist","YoutubePlayer_youtubePlayer","SearchBar_searchBar","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cbacc24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6e0933ab.svg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport logo from '../../logo.svg';\r\nimport './header.css';\r\n\r\nconst NothingPlayingHeader = () => (\r\n    <span>\r\n        Nothing Playing, Party's Dead\r\n    </span>\r\n);\r\n\r\nconst DiscIcon = () => (\r\n    <i className=\"fas fa-compact-disc Now-Playing-Icon\"></i>\r\n);\r\n\r\nconst HeaderView = ({ nowPlayingTitle, username }) => (\r\n    <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1 className=\"App-title\">\r\n            <DiscIcon />\r\n            { (nowPlayingTitle !== '') \r\n                ? ('Now Playing : ' + nowPlayingTitle)\r\n                : <NothingPlayingHeader />\r\n            }\r\n        </h1>\r\n        <h3 className=\"App-title\">\r\n            Welcome, <span className=\"Username-Field\"> {username} </span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        nowPlayingTitle: state.video.nowPlaying,\r\n        username: state.user.username\r\n    }\r\n}\r\n\r\nconst Header = connect(mapStateToProps)(HeaderView);\r\n\r\nexport default Header","const initialVideo = {\r\n    suggestedUser: '',\r\n    nowPlaying: '',\r\n    videoId: ''\r\n}\r\n\r\nconst initialPlaylist = {\r\n    currentPlaylist: []\r\n}\r\n\r\nconst initialUser = {\r\n    username: ''\r\n}\r\n\r\nconst initialLobby = {\r\n    users: []\r\n}\r\n\r\nexport default {\r\n    initialVideo,\r\n    initialPlaylist,\r\n    initialUser,\r\n    initialLobby\r\n}","const UPDATE_CURRENT_VIDEO_TITLE = 'UPDATE_CURRENT_VIDEO_TITLE';\r\nconst UPDATE_CURRENT_VIDEO_ID = 'UPDATE_CURRENT_VIDEO_ID';\r\nconst UPDATE_PLAYLIST = 'UPDATE_PLAYLIST';\r\nconst UPDATE_USERNAME = 'UPDATE_USERNAME';\r\nconst UPDATE_USERS = 'UPDATE_USERS';\r\nconst UPDATE_SUGGESTED_USER = 'UPDATE_SUGGESTED_USER';\r\n\r\nexport default {\r\n    UPDATE_CURRENT_VIDEO_TITLE,\r\n    UPDATE_CURRENT_VIDEO_ID,\r\n    UPDATE_SUGGESTED_USER,\r\n    UPDATE_PLAYLIST,\r\n    UPDATE_USERNAME,\r\n    UPDATE_USERS\r\n}\r\n","import initialState from './initialState';\r\nimport { combineReducers } from 'redux';\r\nimport types from './actionTypes';\r\n\r\nconst video = (state = initialState.initialVideo, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_CURRENT_VIDEO_TITLE:\r\n            return { ...state, nowPlaying: action.data };\r\n        case types.UPDATE_CURRENT_VIDEO_ID:\r\n            return { ...state, videoId: action.data };\r\n        case types.UPDATE_SUGGESTED_USER:\r\n            return { ...state, suggestedUser: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst playlist = (state = initialState.initialPlaylist, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_PLAYLIST:\r\n            return { ...state, currentPlaylist: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst user = (state = initialState.initialUser, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_USERNAME:\r\n            return { ...state, username: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst lobby = (state = initialState.initialLobby, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_USERS:\r\n            return { ...state, users: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({video, playlist, user, lobby});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","const socketMessages = {\r\n    NEW_USER: 'NEW_USER',\r\n    USER_JOINED: 'USER_JOINED',\r\n    FETCH_PLAYLIST: 'FETCH_PLAYLIST',\r\n    UPDATE_PLAYLIST: 'UPDATE_PLAYLIST',\r\n    FETCH_LOBBY_USERS: 'FETCH_LOBBY_USERS',\r\n    UPDATE_LOBBY_USERS: 'UPDATE_LOBBY_USERS',\r\n    PLAY_NEXT_VIDEO: 'PLAY_NEXT_VIDEO',\r\n    ADD_TO_PLAYLIST: 'ADD_TO_PLAYLIST'\r\n }\r\n\r\n export default socketMessages;","// Config used throughout the application\r\nconst config = {\r\n    keys: {\r\n        API_KEY: 'AIzaSyDXQUtd40PzAqYAuet9-Ol0LzKrI6ZTDDM',\r\n        API_BASE_URL: 'https://www.googleapis.com/youtube/v3/search',\r\n        SERVER_BASE_ENDPOINT: 'https://tranquil-thicket-13222.herokuapp.com/',\r\n        // SERVER_BASE_ENDPOINT: 'http://localhost:5000',\r\n    },\r\n    environment: {\r\n        debug: false\r\n    }\r\n}\r\n\r\nexport default config;","import types from '../../reducers/actionTypes';\r\n\r\nconst updateUsername = (username) => ({\r\n    type: types.UPDATE_USERNAME,\r\n    data: username\r\n});\r\n\r\nconst updateLobbyUsers = (users) => ({\r\n    type: types.UPDATE_USERS,\r\n    data: users\r\n});\r\n\r\nexport default {\r\n    updateUsername,\r\n    updateLobbyUsers\r\n}","import store from '../../store/index';\r\nimport socketIOClient from 'socket.io-client';\r\nimport socketMessages from './socket-messages';\r\nimport videoQueueActions from '../actionCreators/video-queue-actions';\r\nimport config from '../../config';\r\nimport userActions from '../actionCreators/user-actions';\r\n\r\nconst socket = socketIOClient(config.keys.SERVER_BASE_ENDPOINT);\r\n\r\n// Initialises socket user connection with server\r\nconst setupUserConnection = () => {\r\n    // Username is stored per cookie\r\n    const sessionUsername = localStorage.getItem(\"username\");\r\n    const userForServer = sessionUsername ? {username: sessionUsername} : {username: ''}\r\n    socket.emit(socketMessages.NEW_USER, userForServer);\r\n    socket.on(socketMessages.USER_JOINED, (user) => {\r\n        if(!sessionUsername) {\r\n            store.dispatch(userActions.updateUsername(user.username));\r\n            localStorage.setItem('username', user.username);\r\n        } else {\r\n            store.dispatch(userActions.updateUsername(sessionUsername));\r\n        }\r\n    })\r\n}\r\n\r\n// Initialises socket lobby connection with server\r\nconst setupLobbyConnection = () => {\r\n    socket.emit(socketMessages.FETCH_LOBBY_USERS);\r\n    socket.on(socketMessages.UPDATE_LOBBY_USERS, (users) => {\r\n        store.dispatch(userActions.updateLobbyUsers(users));\r\n    })\r\n}\r\n\r\n// Initialises socket playlist connection with server\r\nconst setupPlaylistConnection = () => {\r\n    socket.emit(socketMessages.FETCH_PLAYLIST);\r\n    socket.on(socketMessages.UPDATE_PLAYLIST, (data) => {\r\n        const playlist = data.videos;\r\n        const { videoId, videoTitle, suggestedUser } = videoQueueActions.getHeadVideoPlaylist(playlist);\r\n        store.dispatch(videoQueueActions.updatePlaylist(playlist));\r\n        store.dispatch(videoQueueActions.updateCurrentVideoTitle(videoTitle));\r\n        store.dispatch(videoQueueActions.updateCurrentVideoId(videoId));\r\n        store.dispatch(videoQueueActions.updateSuggestedUser(suggestedUser));\r\n    });\r\n}\r\n\r\nconst playNextVideo = (videoId, defaultSkip) => {\r\n    socket.emit(socketMessages.PLAY_NEXT_VIDEO, { videoId, defaultSkip });\r\n}\r\n\r\nconst addToPlaylist = (video) => {\r\n    socket.emit(socketMessages.ADD_TO_PLAYLIST, video);\r\n}\r\n\r\n// Initial setup of socket connections when jukebox is launched\r\nconst initialSetup = () => {\r\n    setupUserConnection();\r\n    setupPlaylistConnection();\r\n    setupLobbyConnection();\r\n}\r\n\r\nexport default {\r\n    initialSetup,\r\n    addToPlaylist,\r\n    playNextVideo\r\n}","import socketActions from '../socketActions/socket-actions';\r\nimport types from '../../reducers/actionTypes';\r\nimport store from '../../store/index';\r\n\r\nconst addVideoToQueue = (videoId, videoTitle) => {\r\n    const state = store.getState();\r\n    const suggestedUser = state.user.username;\r\n    const video = {\r\n        suggestedUser,\r\n        videoId,\r\n        videoTitle\r\n    }\r\n    socketActions.addToPlaylist(video);\r\n}\r\n\r\nconst getHeadVideoPlaylist = (playlist) => {\r\n    // Catches case when playlist array is empty\r\n    const nullVideo = {\r\n        videoTitle: '',\r\n        videoId: '',\r\n        suggestedUser: ''\r\n    };\r\n    const head = playlist && playlist[0] || nullVideo;\r\n    return head;\r\n};\r\n\r\n// If defaultSkip is set to false then only the host will play the next video\r\nconst updateQueue = (defaultSkip = true) => {\r\n    const state = store.getState();\r\n    const videoId = state.video.videoId;\r\n    socketActions.playNextVideo(videoId, defaultSkip);\r\n}\r\n\r\n// Redux store actions\r\nconst updateCurrentVideoTitle = (videoTitle) => ({\r\n    type: types.UPDATE_CURRENT_VIDEO_TITLE,\r\n    data: videoTitle\r\n})\r\n\r\nconst updateCurrentVideoId = (videoId) => ({\r\n    type: types.UPDATE_CURRENT_VIDEO_ID,\r\n    data: videoId\r\n})\r\n\r\nconst updateSuggestedUser = (suggestedUser) => ({\r\n    type: types.UPDATE_SUGGESTED_USER,\r\n    data: suggestedUser\r\n})\r\n\r\nconst updatePlaylist = (playlist) => ({\r\n    type: types.UPDATE_PLAYLIST,\r\n    data: playlist\r\n});\r\n\r\nexport default {\r\n    addVideoToQueue,\r\n    updateCurrentVideoTitle,\r\n    updateCurrentVideoId,\r\n    updateSuggestedUser,\r\n    updatePlaylist,\r\n    getHeadVideoPlaylist,\r\n    updateQueue\r\n}\r\n","import React from 'react';\r\nimport { Grid, Row, Col, Panel, Button } from 'react-bootstrap/lib';\r\nimport videoQueueActions from '../../actions/actionCreators/video-queue-actions';\r\nimport './videoSuggestions.css';\r\n\r\nclass VideoPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(videoId, videoTitle) {\r\n        videoQueueActions.addVideoToQueue(videoId, videoTitle);\r\n    }\r\n\r\n    renderCols(video) {\r\n        const etag = video.etag;\r\n        const title = video.snippet.title;\r\n        const thumbnailUrl = video.snippet.thumbnails.high.url;\r\n        \r\n        return (\r\n            <Col key={etag} sm={12} md={6}>\r\n                <li className=\"Suggestion-Container\" key={etag}>\r\n                    <Panel className=\"Panel-Wrapper\">\r\n                        <Panel.Heading>\r\n                            <div className=\"Suggestion-Title\">{title}</div>\r\n                        </Panel.Heading>\r\n                        <Panel.Body>\r\n                            <div><img alt=\"video-thumbnail\" className=\"Suggestion-Thumbnail\" src={thumbnailUrl} /></div>\r\n                            <Button\r\n                                className=\"Add-Video-Button\"\r\n                                bsStyle=\"primary\"\r\n                                onClick={ () => this.handleClick(video.id.videoId, title) }\r\n                            >\r\n                                Add To Queue\r\n                            </Button>\r\n                        </Panel.Body>\r\n                    </Panel>\r\n                </li>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        // There are two videos per column\r\n        return (\r\n            <div>{this.props.videos.map((video) => this.renderCols(video))}</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst VideoSuggestions = (props) => {\r\n    // The videos array being passed here is a 2d array [['video1', 'video2'], ['video3', 'video4']]\r\n    const rows = props.videos.map(video => (\r\n        <Row key={video[0].etag} className=\"show-grid\">\r\n            <VideoPanel videos={video} />\r\n        </Row>\r\n    ))\r\n\r\n    return <ul className=\"Video-List\"><Grid>{rows}</Grid></ul>\r\n}\r\n\r\nexport default VideoSuggestions","import axios from 'axios'\r\nimport config from '../../config'\r\n\r\nconst MAX_RESULTS = 10;\r\n\r\nconst getVideos = (query) => new Promise((resolve, reject) => {\r\n    let videos = [];\r\n    axios.get(config.keys.API_BASE_URL + '?key=' + config.keys.API_KEY + '&part=snippet&q=' + query + '&maxResults=' + MAX_RESULTS)\r\n        .then(({ data }) => {\r\n            videos = data.items.filter(video => video.id.kind === 'youtube#video');\r\n            if( (videos.length % 2) !== 0 ) {\r\n                videos.splice(-1,1);\r\n            }\r\n            resolve(videos);\r\n        })\r\n        .catch((error) => {\r\n            reject(error.response);\r\n        });\r\n})\r\n\r\nexport default {\r\n    getVideos\r\n}","import React from 'react';\r\nimport { InputGroup, FormGroup, FormControl } from 'react-bootstrap/lib';\r\nimport VideoSuggestions from '../VideoSuggestions/videoSuggestions';\r\nimport videoSearchActions from '../../actions/youtubeApiActions/video-search-actions';\r\nimport './searchBar.css';\r\n\r\nconst VIDEOS_PER_ROW = 2;\r\n\r\nconst HeadPhoneIcon = () => (\r\n    <i className=\"fas fa-headphones-alt Head-Phone-Icon\"></i>\r\n);\r\n\r\nconst VideoSearchPrompt = () => (\r\n    <div className=\"Search-Video-Prompt-Container\">\r\n        <HeadPhoneIcon />\r\n        <h4 className=\"Search-Video-Prompt-Prefix\"> Search for your favorite songs </h4>\r\n        <h5 className=\"Search-Video-Prompt-Suffix\"> Add them to the playlist and get this party started! </h5>\r\n    </div>\r\n)\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: '',\r\n            results: []\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n    }\r\n\r\n    submitForm (event) {\r\n        // Prevent page from being reloaded and restrict to live search\r\n        event.preventDefault();\r\n    }\r\n\r\n    formatVideos = (videos) => {\r\n        let formattedVideos = [];\r\n        for(let i = 0; i <videos.length; i+=VIDEOS_PER_ROW) {\r\n            const row = [];\r\n            row.push(videos[i]);\r\n            row.push(videos[i+1]);\r\n            formattedVideos.push(row);\r\n        }\r\n        return formattedVideos;\r\n    }\r\n\r\n    getVideos = () => {\r\n        videoSearchActions.getVideos(this.state.query)\r\n            .then((videos) => {\r\n                this.setState({\r\n                    results:this.formatVideos(videos)\r\n                })\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            query: event.target.value    \r\n        }, () => {\r\n            if(this.state.query && this.state.query.length > 2){\r\n                this.getVideos()\r\n            }else if (!this.query){\r\n                this.setState({\r\n                    results: []\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.submitForm}>\r\n                <FormGroup className=\"Search-Bar-Container\" controlId=\"formBasicText\">\r\n                    <InputGroup>\r\n                        <InputGroup.Addon>\r\n                            <i className=\"fab fa-youtube-square\"></i>\r\n                        </InputGroup.Addon>\r\n                        <FormControl\r\n                            className=\"Search-Bar\"\r\n                            type=\"text\"\r\n                            value={this.state.query}\r\n                            placeholder=\"Enter a song name from Youtube\"\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    </InputGroup>\r\n                </FormGroup>\r\n                <div className=\"Video-Suggestions\">\r\n                    { this.state.results.length > 0\r\n                        ? <VideoSuggestions videos={this.state.results} />\r\n                        : <VideoSearchPrompt />\r\n                    }\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport Youtube from 'react-youtube';\r\nimport { Button } from 'react-bootstrap/lib';\r\nimport { connect } from 'react-redux';\r\nimport config from '../../config';\r\nimport videoQueueActions from '../../actions/actionCreators/video-queue-actions';\r\nimport './youtubePlayer.css';\r\n\r\nconst VideoBanner = ({suggestedUser, videoId, player}) => (\r\n    <h4 className=\"Video-Banner-Title\">\r\n        Added by : <span className=\"Suggested-User\" >{suggestedUser}</span>\r\n        <Button \r\n            className=\"Skip-Video-Button\"\r\n            bsStyle=\"primary\"\r\n            bsSize=\"small\"\r\n            onClick={ () => videoQueueActions.updateQueue(true) }\r\n        >\r\n            Skip <i className=\"Skip-Icon fas fa-forward\"></i>\r\n        </Button>\r\n\r\n        <Button \r\n            className=\"Skip-Video-Button\"\r\n            bsStyle=\"primary\"\r\n            bsSize=\"small\"\r\n            onClick={ () => player.unMute() }\r\n        >\r\n           <i className=\"fas fa-volume-up\"></i>\r\n        </Button>\r\n    </h4>\r\n);\r\n\r\nclass YoutubePlayerView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            player: null\r\n        };\r\n\r\n        this._onReady = this._onReady.bind(this);\r\n        this._onChangeVideo = this._onStateChange.bind(this);\r\n    }\r\n\r\n    _onReady(event) {\r\n        // Mount player to component\r\n        this.setState({\r\n            player: event.target\r\n        });\r\n\r\n        event.target.mute();\r\n        event.target.playVideo();\r\n    }\r\n\r\n    _onStateChange(event) {\r\n        // Mounted\r\n        if(event.data === -1) {\r\n            // event.target.seekTo(50,true);\r\n        }\r\n\r\n        // Finished playing\r\n        if(event.data === 0) {\r\n            videoQueueActions.updateQueue(false);\r\n        }\r\n        // event.target.playVideo();\r\n    }\r\n\r\n    render() {\r\n        const { currentVideoId, suggestedUser } = this.props\r\n\r\n        const playerClassName = config.environment.debug ? 'Youtube-Player-Debug' : 'Youtube-Player';\r\n        const debugPlayerVars = { autoplay: 1 };\r\n        const defaultPlayerVars = {\r\n            autoplay: 1,\r\n            controls: 0,\r\n            showinfo: 0\r\n        };\r\n\r\n        const playerVars = config.environment.debug ? debugPlayerVars : defaultPlayerVars;\r\n\r\n        const opts = {\r\n            height: '250',\r\n            width: '420',\r\n            playerVars\r\n        }\r\n\r\n        return (\r\n            <div className=\"Youtube-Player-Wrapper\">\r\n                <Youtube\r\n                    className= {playerClassName}\r\n                    videoId={currentVideoId}\r\n                    opts={opts}\r\n                    onReady={this._onReady}\r\n                    onStateChange={this._onStateChange}\r\n                />\r\n                { suggestedUser !== '' \r\n                    ? <VideoBanner suggestedUser={suggestedUser} videoId={currentVideoId} player={this.state.player}/>\r\n                    : <h4 className=\"Video-Banner-Title\">Jukebox Currently Paused</h4>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentVideoId: state.video.videoId,\r\n        suggestedUser: state.video.suggestedUser\r\n    }\r\n}\r\n\r\nconst YoutubePlayer = connect(mapStateToProps)(YoutubePlayerView);\r\n\r\nexport default YoutubePlayer","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './playlist.css';\r\n\r\nconst EmptyPlaylistView = () => (\r\n    <div className=\"Empty-Video-Background\">\r\n        <i className=\"Pause-Icon far fa-pause-circle\"></i>\r\n        <h4 className=\"No-Video-Text\">Currently no videos on the queue</h4>\r\n    </div>\r\n);\r\n\r\nconst PlaylistView = ({playlist}) => {\r\n    const listItems = playlist.map((video,index) => (\r\n        <div key={index} className=\"Playlist-Item-Wrapper\">\r\n            <li className=\"Playlist-Item\" key={index}>\r\n                <i className=\"Music-Icon fas fa-music\"></i>{video.videoTitle}\r\n            </li>\r\n            <hr className=\"Seperator\"/>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <div className=\"Playlist-Section\">\r\n            <h4 className=\"Playlist-Header\"> Current Playlist</h4>\r\n            <hr className=\"Seperator\"/>\r\n            <ul className=\"Video-Playlist\">\r\n                { playlist.length > 0 ? (listItems) : <EmptyPlaylistView/> }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        playlist: state.playlist.currentPlaylist\r\n    }\r\n};\r\n\r\nconst Playlist = connect(mapStateToProps)(PlaylistView);\r\n\r\nexport default Playlist;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navbar, Nav, NavDropdown, MenuItem } from 'react-bootstrap/lib';\r\nimport './navbar.css';\r\n\r\nconst NoUsersItem = () => (\r\n    <MenuItem>Currently No Users</MenuItem>\r\n);\r\n\r\nconst UserIcon = () => (\r\n    <i className=\"User-Icon fas fa-user\"></i>\r\n);\r\n\r\nconst NavigationBarView = ({users, username}) => {\r\n    const NavBarDropdownItems = users.map((user,index) => (\r\n        <MenuItem key={index}>\r\n            <UserIcon/>\r\n            <span className=\"Username-List-Item\">\r\n                {user.username}\r\n                { username === user.username && (' (You)') }\r\n            </span>\r\n        </MenuItem>\r\n    ));\r\n    \r\n    return (\r\n        <Navbar inverse collapseOnSelect>\r\n            <Navbar.Header>\r\n                <Navbar.Brand>\r\n                    Online Jukebox\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n                <Nav pullRight>\r\n                    <NavDropdown title=\"Users\" id=\"Users-Nav-Dropdown\">\r\n                        { users.length > 0 ? (NavBarDropdownItems) : <NoUsersItem/> }\r\n                    </NavDropdown>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.user.username,\r\n        users: state.lobby.users\r\n    }\r\n};\r\n\r\nconst NavigationBar = connect(mapStateToProps)(NavigationBarView);\r\n\r\nexport default NavigationBar\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/header';\nimport SearchBar from './components/SearchBar/searchBar';\nimport YoutubePlayer from './components/YoutubePlayer/youtubePlayer';\nimport socketActions from './actions/socketActions/socket-actions';\nimport Playlist from './components/Playlist/playlist';\nimport NavigationBar from './components/Navbar/navbar';\n\nclass App extends Component {\n    componentDidMount() {\n        socketActions.initialSetup();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <NavigationBar />\n                <Header />\n                <div className=\"Main-Container\">\n                    <div className=\"Player-View-Container\">\n                        <span className=\"Current-Playlist\"><Playlist /></span>\n                        <span className=\"Youtube-Player-Container\"><YoutubePlayer /></span>\n                    </div>\n                </div>\n                <div className=\"Search-Bar-Wrapper\"><SearchBar /></div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}