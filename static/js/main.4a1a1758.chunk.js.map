{"version":3,"sources":["components/organisms/Navbar/navbar.js","utils/isDataLoading.js","components/molecules/LoadingSpinner/loadingSpinner.js","state/request/requestNames.js","components/organisms/ApplicationHeader/applicationHeader.js","config.js","components/organisms/YoutubePlayer/subComponents/noVideoBackdrop.js","socket/createSocketClient.js","state/request/actions.js","state/video/actions.js","state/playlist/actions.js","socket/socketMessages.js","state/lobby/actions.js","components/organisms/YoutubePlayer/youtubePlayer.js","components/organisms/Playlist/playlist.js","components/organisms/VideoSuggestions/subComponents/videoSuggestionDescription.js","components/organisms/VideoSuggestions/subComponents/videoPanel.js","components/organisms/VideoSuggestions/videoSuggestions.js","components/molecules/EmptyTabPlaceholder/emptyTabPlaceholder.js","state/searchVideos/actions.js","state/autocomplete/actions.js","components/organisms/SearchBar/searchBar.js","components/environments/ActionTabs/actionTabs.js","components/environments/LobbyFooter/subComponents/footerCurrentSong.js","components/molecules/VideoProgressBar/videoProgressBar.js","utils/convertSecondsToTimeString.js","components/environments/LobbyFooter/subComponents/footerProgressDuration.js","utils/convertTimeString.js","components/environments/LobbyFooter/subComponents/footerVideoControls.js","components/environments/LobbyFooter/subComponents/footerVolumeControls.js","components/environments/LobbyFooter/lobbyFooter.js","components/environments/LobbyMainContent/lobbyMainContent.js","state/user/actions.js","Application.js","utils/createReducer.js","state/autocomplete/reducers.js","state/user/reducers.js","state/lobby/reducers.js","state/searchVideos/reducers.js","state/playlist/reducers.js","state/video/reducers.js","state/request/reducers.js","state/rootReducer.js","store/index.js","serviceWorker.js","index.js"],"names":["NoUsersItem","react_default","a","createElement","lib","UserIcon","className","NavigationBar","connect","state","username","user","users","lobby","_ref","NavBarDropdownItems","map","index","key","navbar_UserIcon","inverse","collapseOnSelect","Header","Brand","Toggle","Collapse","pullRight","title","id","length","navbar_NoUsersItem","isDataLoading","loadingRequests","_arr","Object","entries","_i","_ref3","_ref2","slicedToArray","requestName","isLoading","labelMap","_labelMap","defineProperty","LoadingSpinner","requests","_isDataLoading","spinnerClassName","ApplicationHeader","config","server","baseUrl","production","development","api","autocomplete","BASE_URL","environment","debug","NoVideoBackDrop","socket","socketIOClient","types","dataLoading","type","dataLoadingSuccess","updateQueue","currentVideoId","videoId","defaultSkip","emit","playNextVideo","arguments","undefined","setupPlaylistConnection","dispatch","on","data","playlist","videos","video","videoTitle","suggestedUser","videoDuration","getHeadVideoPlaylist","currentPlaylist","updatePlaylist","updateCurrentVideo","addVideoToQueue","addToPlaylist","YoutubePlayerView","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","player","_onReady","bind","assertThisInitialized","_onStateChange","event","target","setState","mountPlayer","window","mute","playVideo","playerClassName","opts","height","width","playerVars","autoplay","controls","showinfo","subComponents_noVideoBackdrop","YouTube","onReady","onStateChange","React","Component","YoutubePlayer","EmptyPlaylistView","Playlist","listItems","react","playlist_EmptyPlaylistView","VideoSuggestionDescription","channelTitle","VideoPanel","thumbnail","duration","alt","src","subComponents_videoSuggestionDescription","bsStyle","onClick","VideoSuggestions","rows","subComponents_videoPanel","HeadPhoneIcon","EmptyTabPlaceholder","emptyTabPlaceholder_HeadPhoneIcon","searchVideos","query","path","concat","axios","get","then","response","catch","error","getAutocompleteSuggestions","Promise","resolve","reject","jsonp","Error","suggestion","name","SearchBar","handleInputChange","updateSuggestions","handleTypeaheadChange","selected","searchBarRef","createRef","_this2","_this$props","multiple","options","onSubmit","preventDefault","ref","controlId","Addon","react_bootstrap_typeahead_lib","allowNew","labelKey","onSearch","onChange","placeholder","VideoSuggestions_videoSuggestions","EmptyTabPlaceholder_emptyTabPlaceholder","_ref$autocomplete","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","t0","stop","_x","apply","updateAutocompleteSuggestions","ActionTabs","Tabs_default","defaultActiveKey","Tab_default","eventKey","SearchBar_searchBar","SongInfo","footerCurrentSong_SongInfo","VideoProgressBar","currentProgress","frameRate","updateProgress","Math","ceil","getCurrentTime","interval","setInterval","previousProps","clearInterval","ProgressBar","now","VideoProgressBarWrapper","Fragment","videoProgressBar_VideoProgressBar","padTime","time","convertSecondsToTimeString","seconds","minutesRemain","hours","minutes","floor","secondsRemain","FooterProgressDuration","currentTime","updateCurrentTime","convertTimeString","timeString","_segmentTime","timeUnits","segments","split","reverse","parseInt","timeObject","forEach","segmentTime","totalTimeInSeconds","convertTimeStringToSeconds","bsSize","subComponents_footerProgressDuration","VideoProgressBar_videoProgressBar","volume","updateVolume","setVolume","unMute","js_default","maxValue","minValue","value","LobbyFooter","subComponents_footerCurrentSong","subComponents_footerVideoControls","subComponents_footerVolumeControls","ApplicationHeader_applicationHeader","organisms_Playlist_playlist","YoutubePlayer_youtubePlayer","ActionTabs_actionTabs","LobbyFooter_lobbyFooter","updateUsername","ApplicationView","initLobby","LoadingSpinner_loadingSpinner","Navbar_navbar","LobbyMainContent_lobbyMainContent","Application","sessionUsername","localStorage","getItem","userForServer","setItem","createReducer","initialState","handlers","action","hasOwnProperty","_handlers","objectSpread","lobby_reducers_handlers","searchVideos_reducers_handlers","statuses","request_reducers_handlers","status","rootReducer","combineReducers","store","createStore","compose","toConsumableArray","applyMiddleware","thunkMiddleware","Boolean","location","hostname","match","ReactDOM","render","es","src_Application","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a1a1758.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navbar, Nav, NavDropdown, MenuItem } from 'react-bootstrap/lib';\r\nimport './navbar.css';\r\n\r\nconst NoUsersItem = () => (\r\n    <MenuItem>Currently No Users</MenuItem>\r\n);\r\n\r\nconst UserIcon = () => (\r\n    <i className=\"user-icon fas fa-user\"></i>\r\n);\r\n\r\nconst NavigationBarView = ({users, username}) => {\r\n    const NavBarDropdownItems = users.map((user,index) => (\r\n        <MenuItem key={index}>\r\n            <UserIcon/>\r\n            <span className=\"username-list-item\">\r\n                {user.username}\r\n                { username === user.username && (' (You)') }\r\n            </span>\r\n        </MenuItem>\r\n    ));\r\n    \r\n    return (\r\n        <Navbar inverse collapseOnSelect>\r\n            <Navbar.Header>\r\n                <Navbar.Brand>\r\n                    Online Jukebox\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n                <Nav pullRight>\r\n                    <NavDropdown title=\"Users\" id=\"Users-Nav-Dropdown\">\r\n                        { users.length > 0 ? (NavBarDropdownItems) : <NoUsersItem/> }\r\n                    </NavDropdown>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.user.username,\r\n        users: state.lobby.users\r\n    }\r\n};\r\n\r\nconst NavigationBar = connect(mapStateToProps)(NavigationBarView);\r\n\r\nexport default NavigationBar\r\n","const isDataLoading = (loadingRequests) => {\r\n    for (let [requestName, { isLoading }] of Object.entries(loadingRequests)) {\r\n        if(isLoading) {\r\n            return {\r\n                isLoading,\r\n                requestName\r\n            }\r\n        }\r\n    }\r\n\r\n    return { isLoading: false, requestName: '' };\r\n}\r\n\r\nexport default isDataLoading;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    SEARCH_VIDEO,\r\n    INIT_LOBBY,\r\n    ADD_VIDEO_TO_PLAYLIST\r\n} from '../../../state/request/requestNames';\r\nimport isDataLoading from '../../../utils/isDataLoading';\r\nimport './loadingSpinner.css';\r\n\r\nconst labelMap =  {\r\n    [INIT_LOBBY]: 'Plugging you in ...',\r\n    [SEARCH_VIDEO]: 'Searching ...',\r\n    [ADD_VIDEO_TO_PLAYLIST]: 'Adding video to queue ...'\r\n};\r\n\r\nconst LoadingSpinnerView = ({isLoading, requestName}) => {\r\n    const spinnerClassName = isLoading ? 'full-page-spinner-container' : 'full-page-spinner-inactive';\r\n\r\n    return (\r\n        <div className={spinnerClassName}>\r\n            <div className=\"full-page-spinner\"></div>\r\n            <div className=\"full-page-spinner-label\"> { labelMap[requestName] } </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({ requests: { loadingRequests } }) => {\r\n    const { isLoading, requestName } = isDataLoading(loadingRequests);\r\n\r\n    return {\r\n        isLoading,\r\n        requestName\r\n    }\r\n}\r\n\r\nLoadingSpinnerView.propTypes = {\r\n    isLoading: PropTypes.bool.isRequired,\r\n    requestName: PropTypes.string.isRequired\r\n};\r\n\r\nconst LoadingSpinner = connect(mapStateToProps)(LoadingSpinnerView);\r\n\r\nexport default LoadingSpinner;","export const SEARCH_VIDEO = 'searchVideo';\r\nexport const INIT_LOBBY = 'initLobby'; \r\nexport const ADD_VIDEO_TO_PLAYLIST = 'addVideoToPlaylist';\r\nexport const AUTOCOMPLETE = 'autocomplete';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './applicationHeader.css';\r\n\r\nconst ApplicationHeaderView = ({username }) => (\r\n    <header className=\"application-header\">\r\n        <h3 className=\"welcome-heading\">\r\n            Welcome, <span className=\"username-field\"> {username} </span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nApplicationHeaderView.propTypes = {\r\n    suggestedUser: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    username: state.user.username\r\n});\r\n\r\nconst ApplicationHeader = connect(mapStateToProps)(ApplicationHeaderView);\r\n\r\nexport default ApplicationHeader","// Config used throughout the application\r\nconst config = {\r\n    server: {\r\n        baseUrl: {\r\n            production: 'https://tranquil-thicket-13222.herokuapp.com',\r\n            development: 'http://localhost:5000'\r\n        } \r\n    },\r\n    api: {\r\n       autocomplete: {\r\n           BASE_URL: 'https://suggestqueries.google.com/complete/search'\r\n       }  \r\n    },\r\n    environment: {\r\n        debug: false\r\n    }\r\n}\r\n\r\nexport default config;","import React from 'react';\r\nimport './noVideoBackdrop.css';\r\n\r\nconst NoVideoBackDrop = () => (\r\n    <div className=\"no-video-backdrop\">\r\n        <h4 className=\"no-video-backdrop-title\"> Jukebox Paused </h4>\r\n    </div>\r\n);\r\n\r\nexport default NoVideoBackDrop;","import socketIOClient from 'socket.io-client';\r\nimport config from '../config';\r\n\r\nconst environment = process.env.NODE_ENV;\r\n\r\nconst socket = socketIOClient(config.server.baseUrl[environment]);\r\n\r\nexport default socket;","const types = {\r\n    LOADING_DATA: 'loadingData',\r\n    DATA_LOADED_SUCCESS: 'loadingSuccess',\r\n    DATA_LOADED_FAILURE: 'loadingFailure'\r\n}\r\n\r\nconst dataLoading = (requestName) => ({\r\n    type: types.LOADING_DATA,\r\n    requestName\r\n});\r\n\r\nconst dataLoadingSuccess = (requestName) => ({\r\n    type: types.DATA_LOADED_SUCCESS,\r\n    requestName\r\n});\r\n\r\nconst dataLoadingFailure = (requestName) => ({\r\n    type: types.DATA_LOADED_FAILURE,\r\n    requestName\r\n});\r\n\r\nexport {\r\n    types,\r\n    dataLoading,\r\n    dataLoadingSuccess,\r\n    dataLoadingFailure\r\n};","const types = {\r\n    UPDATE_CURRENT_VIDEO: 'updateCurrentVideo'\r\n};\r\n\r\nconst updateCurrentVideo = (video) => ({\r\n    type: types.UPDATE_CURRENT_VIDEO,\r\n    video\r\n});\r\n\r\nexport {\r\n    types,\r\n    updateCurrentVideo\r\n};","import socket from '../../socket/createSocketClient';\r\nimport { \r\n    FETCH_PLAYLIST,\r\n    UPDATE_PLAYLIST,\r\n    PLAY_NEXT_VIDEO,\r\n    ADD_TO_PLAYLIST\r\n} from '../../socket/socketMessages';\r\nimport { dataLoading, dataLoadingSuccess } from '../request/actions';\r\nimport { INIT_LOBBY, ADD_VIDEO_TO_PLAYLIST } from '../request/requestNames';\r\nimport { updateCurrentVideo } from '../video/actions';\r\n\r\nconst types = {\r\n    UPDATE_PLAYLIST: 'updatePlaylist'\r\n};\r\n\r\nconst playNextVideo = (videoId, defaultSkip) => {\r\n    socket.emit(PLAY_NEXT_VIDEO, { videoId, defaultSkip });\r\n};\r\n\r\nconst addToPlaylist = (video) => {\r\n    socket.emit(ADD_TO_PLAYLIST, video);\r\n};\r\n\r\nconst getHeadVideoPlaylist = (playlist) => {\r\n    // Catches case when playlist array is empty\r\n    const nullVideo = {\r\n        videoTitle: '',\r\n        videoId: '',\r\n        suggestedUser: '',\r\n        videoDuration: ''\r\n    };\r\n    const head = playlist.length > 0 ? playlist[0] : nullVideo;\r\n    return head;\r\n};\r\n\r\n// If defaultSkip is set to false then only the host will play the next video\r\nconst updateQueue = (currentVideoId, defaultSkip = true) => {\r\n    playNextVideo(currentVideoId, defaultSkip);\r\n};\r\n\r\n// Redux store actions\r\nconst updatePlaylist = (playlist) => ({\r\n    type: types.UPDATE_PLAYLIST,\r\n    currentPlaylist: playlist\r\n});\r\n\r\n// Initialises socket playlist connection with server\r\nconst setupPlaylistConnection = () => (dispatch) => {\r\n    socket.emit(FETCH_PLAYLIST);\r\n    socket.on(UPDATE_PLAYLIST, (data) => {\r\n        const playlist = data.videos;\r\n        const video = getHeadVideoPlaylist(playlist);\r\n        dispatch(updatePlaylist(playlist));\r\n        dispatch(updateCurrentVideo(video));\r\n        dispatch(dataLoadingSuccess(INIT_LOBBY));\r\n    });\r\n};\r\n\r\nconst addVideoToQueue = (video) => (dispatch) => {\r\n    dispatch(dataLoading(ADD_VIDEO_TO_PLAYLIST));\r\n    addToPlaylist(video);\r\n    dispatch(dataLoadingSuccess(ADD_VIDEO_TO_PLAYLIST));\r\n};\r\n\r\nexport {\r\n    types,\r\n    playNextVideo,\r\n    addToPlaylist,\r\n    getHeadVideoPlaylist,\r\n    updateQueue,\r\n    updatePlaylist,\r\n    setupPlaylistConnection,\r\n    addVideoToQueue\r\n};","export const NEW_USER = 'NEW_USER';\r\nexport const USER_JOINED = 'USER_JOINED';\r\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\r\nexport const UPDATE_PLAYLIST = 'UPDATE_PLAYLIST';\r\nexport const FETCH_LOBBY_USERS = 'FETCH_LOBBY_USERS';\r\nexport const UPDATE_LOBBY_USERS = 'UPDATE_LOBBY_USERS';\r\nexport const PLAY_NEXT_VIDEO = 'PLAY_NEXT_VIDEO';\r\nexport const ADD_TO_PLAYLIST = 'ADD_TO_PLAYLIST';","import socket from '../../socket/createSocketClient';\r\nimport { FETCH_LOBBY_USERS, UPDATE_LOBBY_USERS } from '../../socket/socketMessages'; \r\n\r\nconst types = {\r\n    UPDATE_VOLUME: 'updateVolume',\r\n    UPDATE_LOBBY_USERS: 'updateLobbyUsers',\r\n    MOUNT_PLAYER: 'mountPlayer'\r\n};\r\n\r\nconst mountPlayer = (player) => ({\r\n    type: types.MOUNT_PLAYER,\r\n    player\r\n});\r\n\r\nconst updateVolume = (volume, player) => (dispatch) => {\r\n    dispatch({\r\n        type: types.UPDATE_VOLUME,\r\n        volume\r\n    });\r\n\r\n    if(volume === 0) {\r\n        player.mute();\r\n        return\r\n    }\r\n\r\n    player.setVolume(volume)\r\n    player.unMute();\r\n};\r\n\r\nconst getLobbyUsers = () => (dispatch) => {\r\n    socket.emit(FETCH_LOBBY_USERS);\r\n    socket.on(UPDATE_LOBBY_USERS, (users) => {\r\n        dispatch({\r\n            type: types.UPDATE_LOBBY_USERS,\r\n            users\r\n        });\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    types,\r\n    updateVolume,\r\n    getLobbyUsers,\r\n    mountPlayer\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Youtube from 'react-youtube';\r\nimport { connect } from 'react-redux';\r\nimport config from '../../../config';\r\nimport NoVideoBackdrop from './subComponents/noVideoBackdrop';\r\nimport './youtubePlayer.css';\r\nimport { updateQueue } from '../../../state/playlist/actions';\r\nimport { mountPlayer } from '../../../state/lobby/actions';\r\n\r\nclass YoutubePlayerView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            player: null\r\n        };\r\n        \r\n        this._onReady = this._onReady.bind(this);\r\n        this._onStateChange = this._onStateChange.bind(this);\r\n    }\r\n\r\n    _onReady(event) {\r\n        // Mount player to component\r\n        const player = event.target;\r\n        this.setState({\r\n            player\r\n        });\r\n        this.props.mountPlayer(player);\r\n        window.player = event.target;\r\n        player.mute();\r\n        player.playVideo();\r\n    }\r\n\r\n    _onStateChange(event) {\r\n        // Finished playing\r\n        if(event.data === 0) {\r\n            updateQueue(this.props.currentVideoId, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { currentVideoId } = this.props\r\n\r\n        const playerClassName = config.environment.debug ? 'youtube-player-debug' : 'youtube-player';\r\n        const debugPlayerVars = { autoplay: 1 };\r\n        const defaultPlayerVars = {\r\n            autoplay: 1,\r\n            controls: 0,\r\n            showinfo: 0\r\n        };\r\n\r\n        const playerVars = config.environment.debug ? debugPlayerVars : defaultPlayerVars;\r\n\r\n        const opts = {\r\n            height: '270',\r\n            width: '420',\r\n            playerVars\r\n        }\r\n\r\n        return (\r\n            <div className=\"youtube-player-wrapper\">\r\n                { currentVideoId === '' && <NoVideoBackdrop /> }\r\n                <Youtube\r\n                    className= {playerClassName}\r\n                    videoId={currentVideoId}\r\n                    opts={opts}\r\n                    onReady={this._onReady}\r\n                    onStateChange={this._onStateChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nYoutubePlayerView.propTypes = {\r\n    currentVideoId: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    currentVideoId: state.video.videoId\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    mountPlayer: (player) => { \r\n        dispatch(mountPlayer(player));\r\n    }\r\n});\r\n\r\nconst YoutubePlayer = connect(mapStateToProps, mapDispatchToProps)(YoutubePlayerView);\r\n\r\nexport default YoutubePlayer","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './playlist.css';\r\n\r\nconst EmptyPlaylistView = () => (\r\n    <div className=\"empty-video-background\">\r\n        <i className=\"pause-icon far fa-pause-circle\"></i>\r\n        <h4 className=\"no-video-text\">Currently no videos on the queue</h4>\r\n    </div>\r\n);\r\n\r\nconst PlaylistView = ({playlist}) => {\r\n    const listItems = playlist.map((video,index) => (\r\n        <Fragment key={index}>\r\n            <li className=\"playlist-item\" key={index}>\r\n                <i className=\"music-icon fas fa-music\"></i>{video.videoTitle}\r\n            </li>\r\n            <hr className=\"seperator\"/>\r\n        </Fragment>\r\n    ))\r\n\r\n    return (\r\n        <div className=\"playlist-section\">\r\n            <h4 className=\"playlist-header\"> Current Playlist</h4>\r\n            <hr className=\"seperator\"/>\r\n            <ul className=\"video-playlist\">\r\n                { playlist.length > 0 ? (listItems) : <EmptyPlaylistView/> }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    playlist: state.playlist.currentPlaylist,\r\n});\r\n\r\nconst Playlist = connect(mapStateToProps)(PlaylistView);\r\n\r\nexport default Playlist;","import React from 'react';\r\nimport './videoSuggestionDescription.css';\r\n\r\nconst VideoSuggestionDescription = ({ videoTitle, channelTitle, videoDuration }) => (\r\n    <div className=\"suggestion-description\">\r\n        <h3 className=\"suggestion-title\">\r\n            {videoTitle}\r\n        </h3>\r\n        <div className=\"video-channel\">\r\n            {channelTitle}\r\n        </div>\r\n        <div className=\"video-duration\">\r\n            {videoDuration}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default VideoSuggestionDescription;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap/lib';\r\nimport './videoPanel.css'\r\nimport VideoSuggestionDescription from './videoSuggestionDescription';\r\nimport { addVideoToQueue } from '../../../../state/playlist/actions';\r\n\r\nconst VideoPanelView = ({ video, addVideoToQueue }) => {\r\n    const { videoId, thumbnail, title, channelTitle, duration } = video;\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"suggestion-list-item\" key={videoId}>\r\n                <div><img alt=\"video-thumbnail\" className=\"suggestion-thumbnail\" src={thumbnail} /></div>\r\n                <VideoSuggestionDescription\r\n                    videoTitle={title}\r\n                    channelTitle={channelTitle}\r\n                    videoDuration={duration} \r\n                />\r\n                <Button\r\n                    className=\"add-video-button\"\r\n                    bsStyle=\"primary\"\r\n                    onClick={ () => addVideoToQueue(video) }\r\n                    >\r\n                        <i className=\"fas fa-plus plus-icon\"></i>\r\n                </Button>\r\n            </li>\r\n            <hr className=\"video-suggestion-seperator\"/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addVideoToQueue: (videoId, videoTitle, videoDuration) => { \r\n        dispatch(addVideoToQueue(videoId, videoTitle, videoDuration))\r\n    }\r\n});\r\n\r\nconst VideoPanel = connect(null, mapDispatchToProps)(VideoPanelView);\r\n\r\nexport default VideoPanel;","import React from 'react';\r\nimport VideoPanel from './subComponents/videoPanel';\r\nimport './videoSuggestions.css';\r\n\r\nconst VideoSuggestions = ({ videos }) => {\r\n    const rows = videos.map(video => (\r\n        <VideoPanel key={video.videoId} video={video} />\r\n    ))\r\n\r\n    return <ul className=\"video-suggestion-list\">{rows}</ul>\r\n}\r\n\r\nexport default VideoSuggestions","import React from 'react';\r\nimport './emptyTabPlaceholder.css';\r\n\r\nconst HeadPhoneIcon = () => (\r\n    <i className=\"fas fa-headphones-alt empty-tab-placeholder-icon\"></i>\r\n);\r\n\r\nconst EmptyTabPlaceholder = () => (\r\n    <div className=\"empty-tab-container\">\r\n        <HeadPhoneIcon />\r\n        <h4 className=\"empty-tab-prompt-prefix\"> Search for your favorite songs </h4>\r\n        <h5 className=\"empty-tab-prompt-suffix\"> Let's get this party started! </h5>\r\n    </div>\r\n);\r\n\r\nexport default EmptyTabPlaceholder;","import axios from 'axios'\r\nimport config from '../../config'\r\nimport { SEARCH_VIDEO } from '../request/requestNames';\r\nimport { \r\n    dataLoading,\r\n    dataLoadingSuccess,\r\n    dataLoadingFailure\r\n} from '../request/actions';\r\n\r\nconst types = {\r\n    FAILURE: 'searchVideos/FAILURE',\r\n    SUCCESS: 'searchVideos/SUCCESS'\r\n};\r\n\r\nconst searchVideos = (query) => (dispatch) => {\r\n    // TODO: use axios instance for this\r\n    const environment = process.env.NODE_ENV;\r\n    const path = `${config.server.baseUrl[environment]}/videos?query=${query}`;\r\n    \r\n    dispatch(dataLoading(SEARCH_VIDEO));\r\n\r\n    axios.get(path)\r\n        .then((response) => {\r\n            const videos = response.data;\r\n            dispatch(dataLoadingSuccess(SEARCH_VIDEO));\r\n            dispatch({ type: types.SUCCESS, videos });\r\n        })\r\n        .catch((error) => {\r\n            dispatch(dataLoadingFailure(SEARCH_VIDEO));\r\n            dispatch({ type: types.FAILURE });\r\n        });\r\n};\r\n\r\nexport {\r\n    types,\r\n    searchVideos\r\n};","import jsonp from 'jsonp';\r\nimport config from '../../config'\r\n\r\nconst types = {\r\n    FAILURE: 'autocomplete/FAILURE',\r\n    SUCCESS: 'autocomplete/SUCCESS',\r\n    LOADING: 'autocomplete/LOADING',\r\n    LOADING_COMPLETE: 'autocomplete/LOADING_COMPLETE'\r\n};\r\n\r\nconst formatSuggestions = suggestions => suggestions.map((suggestion) => {\r\n    return { name: suggestion[0] };\r\n});\r\n\r\nconst getAutocompleteSuggestions = (query) => new Promise((resolve, reject) => {\r\n    const path = `${config.api.autocomplete.BASE_URL}?client=youtube&ds=yt&q=${query}`;\r\n\r\n    jsonp(path , (error, data) => {\r\n        if(error) {\r\n            reject(new Error('Error in retreiving autocomplete suggestions'));\r\n        } else {\r\n            resolve(formatSuggestions(data[1]));\r\n        }\r\n    });\r\n});\r\n\r\nconst updateAutocompleteSuggestions = (query) => async(dispatch) => {\r\n    dispatch({ type: types.LOADING });\r\n\r\n    try {\r\n        const options = await getAutocompleteSuggestions(query);\r\n        dispatch({ type: types.SUCCESS,  options });\r\n        dispatch({ type: types.LOADING_COMPLETE });\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: types.FAILURE });\r\n        dispatch({ type: types.LOADING_COMPLETE });\r\n    }\r\n};\r\n\r\nexport {\r\n    types,\r\n    updateAutocompleteSuggestions\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\r\nimport { InputGroup, FormGroup } from 'react-bootstrap/lib';\r\nimport VideoSuggestions from '../VideoSuggestions/videoSuggestions';\r\nimport EmptyTabPlaceholder from '../../molecules/EmptyTabPlaceholder/emptyTabPlaceholder';\r\nimport { searchVideos } from '../../../state/searchVideos/actions';\r\nimport { updateAutocompleteSuggestions } from '../../../state/autocomplete/actions';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport './searchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: ''\r\n        }\r\n        this.searchBarRef = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleTypeaheadChange = this.handleTypeaheadChange.bind(this);\r\n    }\r\n\r\n    handleInputChange = (query) => {\r\n        this.setState({\r\n            query\r\n        });\r\n\r\n        this.props.updateSuggestions(query);\r\n    }\r\n\r\n    handleTypeaheadChange = (selected) => {\r\n        if(selected[0]){\r\n            const query = selected[0].name;\r\n            this.setState({\r\n                query\r\n            });\r\n            this.props.searchVideos(query);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { query } = this.state;\r\n        const { videos, isLoading, multiple, options } = this.props;\r\n\r\n        return (\r\n            <div className=\"video-search-section\">\r\n                <form \r\n                    onSubmit={ (event) => {\r\n                        event.preventDefault();\r\n                        this.props.searchVideos(query)\r\n                    }}\r\n                    ref={this.searchBarRef}\r\n                >\r\n                    <FormGroup className=\"search-bar-wrapper\" controlId=\"formBasicText\">\r\n                        <InputGroup>\r\n                            <InputGroup.Addon>\r\n                                <i className=\"fab fa-youtube-square\"></i>\r\n                            </InputGroup.Addon>\r\n                            <AsyncTypeahead\r\n                                id=\"youtube-autocomplete\"\r\n                                allowNew={false}\r\n                                isLoading={isLoading}\r\n                                multiple={multiple}\r\n                                options={options}\r\n                                labelKey=\"name\"\r\n                                onSearch={this.handleInputChange}\r\n                                onChange={this.handleTypeaheadChange}\r\n                                placeholder=\"Enter a song name from Youtube ...\"\r\n                            />\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </form>\r\n                <div className=\"video-suggestions\">\r\n                    { videos.length > 0\r\n                        ? <VideoSuggestions videos={videos} />\r\n                        : <EmptyTabPlaceholder />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ \r\n    searchVideos: { videos },\r\n    autocomplete: { \r\n        isLoading,\r\n        multiple,\r\n        options\r\n    }\r\n}) => ({\r\n    videos,\r\n    isLoading,\r\n    multiple,\r\n    options\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    searchVideos: (query) => { \r\n        dispatch(searchVideos(query));\r\n    },\r\n    updateSuggestions: (query) => {\r\n        dispatch(updateAutocompleteSuggestions(query));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","import React from 'react';\r\nimport Tabs from 'react-bootstrap/lib/Tabs';\r\nimport Tab from 'react-bootstrap/lib/Tab';\r\nimport './actionTabs.css';\r\nimport SearchBar from '../../organisms/SearchBar/searchBar';\r\nimport EmptyTabPlaceholder from '../../molecules/EmptyTabPlaceholder/emptyTabPlaceholder';\r\n\r\nconst ActionTabs = () => (\r\n    <div className=\"main-action-tabs\">\r\n        <Tabs defaultActiveKey={1} id=\"action-tabs\">\r\n            <Tab eventKey={1} title=\"Search\">\r\n                <SearchBar />\r\n            </Tab>\r\n            <Tab eventKey={2} title=\"Users\">\r\n                <EmptyTabPlaceholder />\r\n            </Tab>\r\n            <Tab eventKey={3} title=\"Playlist\">\r\n                <EmptyTabPlaceholder />\r\n            </Tab>\r\n        </Tabs>\r\n    </div>\r\n);\r\n\r\nexport default ActionTabs;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './footerCurrentSong.css';\r\n\r\nconst SongInfo = ({ videoTitle, channelTitle, suggestedUser }) => (\r\n    <div className=\"footer-song-info\">\r\n        <h3 className=\"footer-video-title\">{videoTitle}</h3>\r\n        { (channelTitle && suggestedUser) &&\r\n            <Fragment>\r\n                <h4 className=\"footer-video-channel\">{channelTitle}</h4>\r\n                <h4 className=\"footer-video-suggested-user\">Added by: {suggestedUser}</h4>\r\n            </Fragment> }\r\n    </div>\r\n);\r\n\r\nconst FooterCurrentSong = ({videoTitle, channelTitle, suggestedUser, thumbnail}) => (\r\n    <section className=\"footer-current-song\">\r\n        { videoTitle &&  \r\n            <Fragment>\r\n                <img alt=\"video-thumbnail\" className=\"footer-video-thumbnail\" src={thumbnail} />\r\n                <SongInfo \r\n                    videoTitle={videoTitle}\r\n                    channelTitle={channelTitle} \r\n                    suggestedUser={suggestedUser}\r\n                />\r\n            </Fragment> }\r\n    </section>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    videoTitle: state.video.videoTitle,\r\n    channelTitle: state.video.channelTitle,\r\n    suggestedUser: state.video.suggestedUser,\r\n    thumbnail: state.video.thumbnail\r\n});\r\n\r\nexport default connect(mapStateToProps)(FooterCurrentSong);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport './videoProgressBar.css';\r\n\r\n// A custom progress bar which indicates progress of the current playing video\r\nclass VideoProgressBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentProgress: 0\r\n        };\r\n        this.frameRate = 500;\r\n        this.updateProgress = () => {\r\n            const { videoDuration } = this.props;\r\n            let currentProgress = 0;\r\n            \r\n            if(window.player) {\r\n                currentProgress = Math.ceil((window.player.getCurrentTime()/videoDuration)*100);\r\n            }\r\n           \r\n            this.setState({\r\n                currentProgress\r\n            }); \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(this.updateProgress, this.frameRate);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        const { videoDuration } = this.props;\r\n        if(videoDuration !== previousProps.videoDuration){\r\n            clearInterval(this.interval);\r\n            this.interval = setInterval(this.updateProgress, this.frameRate);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProgressBar now={this.state.currentProgress} />\r\n        )\r\n    }\r\n};\r\n\r\nconst VideoProgressBarWrapper = ({videoDuration}) => (\r\n    <React.Fragment>\r\n        { \r\n            videoDuration ?\r\n            <VideoProgressBar videoDuration={videoDuration} /> :\r\n            <VideoProgressBar videoDuration={100} />\r\n        }\r\n    </React.Fragment>\r\n);\r\n\r\nVideoProgressBar.propTypes = {\r\n    videoDuration: PropTypes.number.isRequired\r\n};\r\n\r\nVideoProgressBarWrapper.propTypes = {\r\n    videoDuration: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VideoProgressBarWrapper;","const padTime = time => (time < 10) ? `0${time}` : time;  \r\n\r\nconst convertSecondsToTimeString = (seconds) => {\r\n    if(seconds < 60) {\r\n        return `00:${padTime(seconds)}`;\r\n    }\r\n\r\n\tconst minutes = Math.floor(seconds/60);\r\n\tconst secondsRemain = seconds % 60;\r\n\tlet minutesRemain;\r\n\tlet hours;\r\n \r\n\tif(minutes > 60) {\r\n\t\thours = Math.floor(minutes/60);\r\n\t\tminutesRemain = minutes % 60;\r\n    }\r\n\r\n    return hours ?\r\n        `${hours}:${padTime(minutesRemain)}:${padTime(secondsRemain)}` :\r\n        `${padTime(minutes)}:${padTime(secondsRemain)}`;\r\n};\r\n\r\nexport default convertSecondsToTimeString;","import React from 'react';\r\nimport './footerProgressDuration.css';\r\nimport convertSecondsToTimeString from '../../../../utils/convertSecondsToTimeString';\r\n\r\nclass FooterProgressDuration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentTime: 0\r\n        };\r\n        this.frameRate = 1000;\r\n        this.updateCurrentTime = () => {\r\n            let currentTime = 0;\r\n    \r\n            if(window.player) {\r\n                currentTime = Math.ceil((window.player.getCurrentTime()));\r\n            }\r\n    \r\n            this.setState({\r\n                currentTime\r\n            }); \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(this.updateCurrentTime, this.frameRate);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        const { videoDuration } = this.props;\r\n        if(videoDuration !== previousProps.videoDuration){\r\n            clearInterval(this.interval);\r\n            this.interval = setInterval(this.updateCurrentTime, this.frameRate);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        const { videoDuration } = this.props;\r\n\r\n        return (\r\n            <div className=\"footer-progress-duration\">\r\n                <span>{convertSecondsToTimeString(this.state.currentTime)}</span>\r\n                <span className=\"footer-end-time\">{convertSecondsToTimeString(videoDuration)}</span>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FooterProgressDuration;","const segmentTime = (timeString) => {\r\n    const timeUnits = ['seconds', 'minutes', 'hours'];\r\n    const segments = timeString.split(':').reverse().map(time => parseInt(time));\r\n    const timeObject = {}\r\n\r\n    if(segments.length > 0) {\r\n        segments.forEach((duration, index) => {\r\n            timeObject[timeUnits[index]] = duration\r\n        });\r\n    }\r\n\r\n    return timeObject;\r\n}\r\n\r\n// Converts a time string like this '02:58' to seconds\r\nconst convertTimeString = (timeString) => {\r\n    const { seconds, minutes, hours} = segmentTime(timeString);\r\n    let totalTimeInSeconds = 0;\r\n    \r\n    totalTimeInSeconds += (seconds ? seconds : 0);\r\n    totalTimeInSeconds += (minutes ? minutes*60 : 0);\r\n    totalTimeInSeconds += (hours ? hours*60*60 : 0);\r\n\r\n    return totalTimeInSeconds;\r\n}\r\n\r\nexport default convertTimeString;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap/lib';\r\nimport VideoProgressBarWrapper from '../../../molecules/VideoProgressBar/videoProgressBar';\r\nimport FooterProgressDuration from './footerProgressDuration';\r\nimport './footerVideoControls.css';\r\nimport convertTimeStringToSeconds from '../../../../utils/convertTimeString';\r\nimport { updateQueue } from '../../../../state/playlist/actions';\r\n\r\nconst FooterVideoControls = ({videoDuration, videoId}) => (\r\n    <section className=\"footer-controls\">\r\n        <div className=\"footer-control-buttons\">\r\n            <Button \r\n                className=\"favorite-video-button\"\r\n                bsStyle=\"primary\"\r\n                bsSize=\"small\"\r\n            >\r\n                <i className=\"far fa-heart heart-icon\"></i>\r\n            </Button>\r\n\r\n            <Button \r\n                className=\"skip-video-button\"\r\n                bsStyle=\"primary\"\r\n                bsSize=\"small\"\r\n                onClick={ () => updateQueue(videoId, true) }\r\n            >\r\n                Skip <i className=\"skip-icon fas fa-forward\"></i>\r\n            </Button>\r\n        </div>\r\n        <div className=\"footer-progress-bar\">\r\n            <FooterProgressDuration  videoDuration={videoDuration}/>\r\n            <VideoProgressBarWrapper videoDuration={videoDuration} />\r\n        </div>\r\n    </section>\r\n)\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    videoId: state.video.videoId,\r\n    videoDuration: convertTimeStringToSeconds(state.video.videoDuration),\r\n});\r\n\r\nexport default connect(mapStateToProps)(FooterVideoControls);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputRange from 'react-input-range';\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport './footerVolumeControls.css'\r\nimport { Button } from 'react-bootstrap/lib';\r\nimport { updateVolume } from '../../../../state/lobby/actions';\r\n\r\nconst FooterVolumeControls = ({player, volume, updateVolume}) => (\r\n    <section className=\"footer-volume-controls\">\r\n            { volume === 0 ?\r\n                <Button \r\n                    className=\"mute-button\"\r\n                    bsStyle=\"primary\"\r\n                    bsSize=\"small\"\r\n                    onClick={ () => { updateVolume(50, player) } }\r\n                >\r\n                    <i className=\"fas fa-volume-mute\"></i>\r\n                </Button> :\r\n                <Button \r\n                    className=\"mute-button\"\r\n                    bsStyle=\"primary\"\r\n                    bsSize=\"small\"\r\n                    onClick={ () => { updateVolume(0, player) } }\r\n                >\r\n                    <i className=\"fas fa-volume-up\"></i>\r\n                </Button>\r\n            }\r\n            <InputRange\r\n                maxValue={100}\r\n                minValue={0}\r\n                value={volume}\r\n                onChange={value => updateVolume(value, player)} \r\n            />\r\n    </section>\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    volume: state.lobby.volume,\r\n    videoId: state.video.videoId,\r\n    player: state.lobby.player\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateVolume: (volume, player) => { \r\n        dispatch(updateVolume(volume, player));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FooterVolumeControls);","import React from 'react';\r\nimport './lobbyFooter.css';\r\nimport FooterCurrentSong from './subComponents/footerCurrentSong';\r\nimport FooterVideoControls from './subComponents/footerVideoControls';\r\nimport FooterVolumeControls from './subComponents/footerVolumeControls';\r\n\r\nconst LobbyFooter = () => (\r\n    <div className=\"lobby-footer-wrapper\">\r\n        <div className=\"lobby-footer\">\r\n            <section className=\"lobby-footer-content\">    \r\n                <FooterCurrentSong />\r\n                <FooterVideoControls />\r\n                <FooterVolumeControls />\r\n            </section>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default LobbyFooter;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './lobbyMainContent.css';\r\nimport ApplicationHeader from '../../organisms/ApplicationHeader/applicationHeader';\r\nimport YoutubePlayer from '../../organisms/YoutubePlayer/youtubePlayer';\r\nimport Playlist from '../../organisms/Playlist/playlist';\r\nimport ActionTabs from '../ActionTabs/actionTabs';\r\nimport LobbyFooter from '../LobbyFooter/lobbyFooter';\r\nimport LobbyControls from '../../organisms/LobbyControls/lobbyControls';\r\n\r\nconst LobbyMainContent = ({videoId}) => (\r\n    <Fragment>\r\n        <ApplicationHeader />\r\n        <div className=\"upper-section-container\">\r\n            <div className=\"player-view-container\">\r\n                <span className=\"current-playlist-section\"><Playlist /></span>\r\n                <span className=\"youtube-player-container\"><YoutubePlayer /></span>\r\n            </div>\r\n            {/* <LobbyControls/> */}\r\n        </div>\r\n        <div className=\"lower-section-container\">\r\n            <ActionTabs />\r\n        </div>\r\n        { videoId && <LobbyFooter /> }\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    videoId: state.video.videoId\r\n});\r\n\r\nexport default connect(mapStateToProps)(LobbyMainContent);","import { dataLoading } from \"../request/actions\";\r\nimport { INIT_LOBBY } from '../request/requestNames';\r\nimport socket from '../../socket/createSocketClient';\r\nimport { NEW_USER, USER_JOINED } from '../../socket/socketMessages';\r\n\r\nconst types = {\r\n    UPDATE_USERNAME: 'updateUsername'\r\n};\r\n\r\nconst updateUsername = (username) => ({\r\n    type: types.UPDATE_USERNAME,\r\n    username\r\n});\r\n\r\n// Initialises socket user connection with server\r\nconst setupUserConnection = () => (dispatch) => {\r\n    // Username is stored per cookie\r\n    const sessionUsername = localStorage.getItem(\"username\");\r\n    const userForServer = sessionUsername ? {username: sessionUsername} : {username: ''};\r\n\r\n    socket.emit(NEW_USER, userForServer);\r\n    dispatch(dataLoading(INIT_LOBBY));\r\n\r\n    socket.on(USER_JOINED, (user) => {\r\n        if(!sessionUsername) {\r\n            dispatch(updateUsername(user.username));\r\n            localStorage.setItem('username', user.username);\r\n        } else {\r\n            dispatch(updateUsername(sessionUsername));\r\n        }\r\n    });\r\n};\r\n\r\nexport {\r\n    types,\r\n    updateUsername,\r\n    setupUserConnection\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Application.css';\r\nimport NavigationBar from './components/organisms/Navbar/navbar';\r\nimport LoadingSpinner from './components/molecules/LoadingSpinner/loadingSpinner';\r\nimport LobbyMainContent from './components/environments/LobbyMainContent/lobbyMainContent';\r\nimport { setupUserConnection } from './state/user/actions';\r\nimport { getLobbyUsers } from './state/lobby/actions';\r\nimport { setupPlaylistConnection } from './state/playlist/actions';\r\n\r\nclass ApplicationView extends Component {\r\n    componentDidMount() {\r\n        this.props.initLobby();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <LoadingSpinner />\r\n                <NavigationBar />\r\n                <LobbyMainContent />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    initLobby: () => {\r\n        dispatch(setupUserConnection());\r\n        dispatch(getLobbyUsers());\r\n        dispatch(setupPlaylistConnection());\r\n    }\r\n});\r\n\r\nconst Application = connect(null, mapDispatchToProps)(ApplicationView)\r\n\r\nexport default Application;\r\n","const createReducer = (initialState, handlers)  => \r\n    (state = initialState, action  = {}) => (\r\n        handlers.hasOwnProperty(action.type)\r\n            ? handlers[action.type](state, action)\r\n            : state\r\n    );\r\n\r\nexport { createReducer };","import { createReducer } from '../../utils/createReducer';\r\nimport { types } from './actions';\r\n\r\nconst initialState = {\r\n    error: false,\r\n    isLoading: false,\r\n    multiple: false,\r\n    options: []\r\n};\r\n\r\nconst handlers = {\r\n    [types.FAILURE]: (state) => ({\r\n        ...state,\r\n        error: true,\r\n    }),\r\n    [types.SUCCESS]: (state, { options }) => ({\r\n        ...state,\r\n        error: false,\r\n        options\r\n    }),\r\n    [types.LOADING]: (state) => ({\r\n        ...state,\r\n        isLoading: true\r\n    }),\r\n    [types.LOADING_COMPLETE]: (state) => ({\r\n        ...state,\r\n        isLoading: false\r\n    })\r\n};\r\n\r\nexport default createReducer(initialState, handlers);","import { createReducer } from '../../utils/createReducer';\r\nimport { types } from './actions';\r\n\r\nconst initialState = {\r\n    username: ''\r\n};\r\n\r\nconst handlers = {\r\n    [types.UPDATE_USERNAME]: (state, { username }) => ({\r\n        ...state,\r\n        username,\r\n    })\r\n};\r\n\r\nexport default createReducer(initialState, handlers);","import { createReducer } from '../../utils/createReducer';\r\nimport { types } from './actions';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    volume: 0,\r\n    player: null \r\n};\r\n\r\nconst handlers = {\r\n    [types.UPDATE_VOLUME]: (state, { volume }) => ({\r\n        ...state,\r\n        volume\r\n    }),\r\n    [types.UPDATE_LOBBY_USERS]: (state, { users }) => ({\r\n        ...state,\r\n        users\r\n    }),\r\n    [types.MOUNT_PLAYER]: (state, { player }) => ({\r\n        ...state,\r\n        player\r\n    }),\r\n};\r\n\r\nexport default createReducer(initialState, handlers);","import { createReducer } from '../../utils/createReducer';\r\nimport { types } from './actions';\r\n\r\nconst initialState = {\r\n    error: false,\r\n    videos: []\r\n};\r\n\r\nconst handlers = {\r\n    [types.FAILURE]: (state) => ({\r\n        ...state,\r\n        error: true,\r\n    }),\r\n    [types.SUCCESS]: (state, { videos }) => ({\r\n        ...state,\r\n        error: false,\r\n        videos\r\n    })\r\n};\r\n\r\nexport default createReducer(initialState, handlers);\r\n","import { createReducer } from '../../utils/createReducer';\r\nimport { types } from './actions';\r\n\r\nconst initialState = {\r\n    currentPlaylist: []\r\n};\r\n\r\nconst handlers = {\r\n    [types.UPDATE_PLAYLIST]: (state, { currentPlaylist }) => ({\r\n        ...state,\r\n        currentPlaylist\r\n    })\r\n};\r\n\r\nexport default createReducer(initialState, handlers);","import { createReducer } from '../../utils/createReducer';\r\nimport { types } from './actions';\r\n\r\nconst initialState = {\r\n    suggestedUser: '',\r\n    videoId: '',\r\n    videoTitle: '',\r\n    videoDuration: ''\r\n};\r\n\r\nconst handlers = {\r\n    [types.UPDATE_CURRENT_VIDEO]: (state, { video }) => ({\r\n        ...state,\r\n        ...video\r\n    })\r\n};\r\n\r\nexport default createReducer(initialState, handlers);","import { createReducer } from '../../utils/createReducer';\r\nimport { types } from './actions';\r\n\r\nconst statuses = {\r\n    LOADING: 'loading',\r\n    SUCCESS: 'ok',\r\n    ERROR: 'error'\r\n};\r\n\r\nconst initialState = {\r\n    loadingRequests: {}\r\n};\r\n\r\nconst handlers = {\r\n    [types.LOADING_DATA]: (state, { requestName }) => ({\r\n        loadingRequests: {\r\n            ...state.loadingRequests,\r\n            [requestName]: {\r\n                status: statuses.LOADING,\r\n                isLoading: true\r\n            }\r\n        }\r\n    }),\r\n    [types.DATA_LOADED_SUCCESS]: (state, { requestName }) => ({\r\n        loadingRequests: {\r\n            ...state.loadingRequests,\r\n            [requestName]: {\r\n                status: statuses.SUCCESS,\r\n                isLoading: false\r\n            }\r\n        }\r\n    }),\r\n    [types.DATA_LOADED_FAILURE]: (state, { requestName }) => ({\r\n        loadingRequests: {\r\n            ...state.loadingRequests,\r\n            [requestName]: {\r\n                status: statuses.ERROR,\r\n                isLoading: false\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\nexport default createReducer(initialState, handlers);","import { combineReducers } from 'redux';\r\nimport autocomplete from './autocomplete/reducers';\r\nimport user from './user/reducers';\r\nimport lobby from './lobby/reducers';\r\nimport searchVideos from './searchVideos/reducers';\r\nimport playlist from './playlist/reducers';\r\nimport video from './video/reducers';\r\nimport requests from './request/reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    autocomplete,\r\n    user,\r\n    lobby,\r\n    playlist,\r\n    video,\r\n    searchVideos,\r\n    requests,\r\n});\r\n\r\nexport default (state, action) => (\r\n    rootReducer(state, action)  \r\n);","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { types } from '../state/lobby/actions';\r\nimport rootReducer from '../state/rootReducer';\r\n\r\n// Needed for sanitization of youtube player as payload is too large\r\nconst sanitizePlayer = (action) => {\r\n    return action.type === types.MOUNT_PLAYER ?\r\n    { ...action, player: '<<LONG_BLOB>>' } : action\r\n};\r\n\r\nconst constructLobbyState = (state) => ({\r\n    ...state,\r\n    lobby: {\r\n        users: state.lobby.users,\r\n        volume: state.lobby.volume,\r\n        player: '<<YOUTUBE_PLAYER>>'\r\n    }\r\n})\r\n\r\nconst middlewareEnhancers = () => {\r\n    const enhancers = [\r\n        applyMiddleware(thunkMiddleware)\r\n    ];\r\n\r\n    if(process.env.NODE_ENV === 'development' && window.devToolsExtension) {\r\n        enhancers.push(window.devToolsExtension({\r\n            sanitizePlayer,\r\n            stateSanitizer: (state) => state.lobby.player \r\n                ? constructLobbyState(state) : state\r\n        }));\r\n    }\r\n\r\n    return enhancers;\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(...middlewareEnhancers())\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport Application from './Application';\r\nimport store from './store/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Application />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}